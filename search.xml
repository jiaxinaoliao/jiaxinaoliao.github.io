<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>arch linux安装（到U盘中）教程（四 输入法以及背景设置）</title>
      <link href="/2023/01/12/arch-linux%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B%E5%9B%9B/"/>
      <url>/2023/01/12/arch-linux%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B%E5%9B%9B/</url>
      
        <content type="html"><![CDATA[<h1 id="第一部分-fcitx5输入法的安装"><a href="#第一部分-fcitx5输入法的安装" class="headerlink" title="第一部分 fcitx5输入法的安装"></a>第一部分 fcitx5输入法的安装</h1><h2 id="1-fcitx5安装"><a href="#1-fcitx5安装" class="headerlink" title="1. fcitx5安装"></a>1. fcitx5安装</h2><p><code>sudo pacman -S fcitx5-im fcitx5-chinese-addons fcitx5-material-color</code></p><p>安装即可这里面包含了fcitx5本体以及中文包以及模仿微软的一个皮肤</p><p>这个时候我们有win+p打开dmenu输入fcitx5-config（就是fcitx5的配置ui）</p><p><img src="/arch-linux%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B%E4%B8%89/image-20230112143137423.png" alt="image-20230112143137423"></p><p>第一次打开会出现这个因为我们还没有启用fcitx5我们直接点击run fcitx5启动即可之后</p><p><img src="/arch-linux%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B%E4%B8%89/image-20230112143240343.png" alt="image-20230112143240343"></p><p>将这个选项去掉，这个是只显示英文的一些键盘，取消之后我们就可以看到中文的了</p><p><img src="/arch-linux%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B%E4%B8%89/image-20230112143349799.png" alt="image-20230112143349799"></p><p>我们要用到的就是Pinyin我们双击就可以了</p><p><img src="/arch-linux%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B%E4%B8%89/image-20230112143418277.png" alt="image-20230112143418277"></p><p>这个时候就可以看到左边已经被添加进来了</p><p>我们可以用ctrl+space（空格）打开fcitx5以及中英文切换</p><p>我们还需要去<code>sudo vim /etc/environment</code>在后面添加</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">GTK_IM_MODULE=fcitx</span><br><span class="line">QT_IM_MODULE=fcitx</span><br><span class="line">XMODIFIERS=@im=fcitx</span><br><span class="line">SDL_IM_MODULE=fcitx</span><br><span class="line">GLFW_IM_MODULE=ibus</span><br></pre></td></tr></table></figure><p>之后需要重启一下才可以</p><p>重启登录之后输入startx进入dwm</p><p>我们win+dmenu打开firefox然后用ctrl+space打开fcitx5可以看到一个拼</p><p>说明fcitx5以及到了拼音模式输入中文试一下应该就可以输入中文了</p><h2 id="2-配置字库"><a href="#2-配置字库" class="headerlink" title="2. 配置字库"></a>2. 配置字库</h2><h3 id="1-云字库"><a href="#1-云字库" class="headerlink" title="1. 云字库"></a>1. 云字库</h3><p>首先我们win+p打开dmenu之后输入fcitx5-xxx进入配置程序</p><p><img src="/arch-linux%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B%E4%B8%89/image-20230112144037291.png" alt="image-20230112144037291"></p><p>选择addons </p><p><img src="/arch-linux%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B%E4%B8%89/image-20230112144104942.png" alt="image-20230112144104942"></p><p><img src="/arch-linux%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B%E4%B8%89/image-20230112144113872.png" alt="image-20230112144113872"></p><p>第一行最右边点开可以在这个里面可以设置字体的大小我们可以调大一些</p><p><img src="/arch-linux%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B%E4%B8%89/image-20230112144227077.png" alt="image-20230112144227077"></p><p>我们可以看到最后面的主题里面有我们刚刚安装的一些主题选一个自己喜欢的就行之后点击ok即可</p><p>也可以去aur中找更多的主题</p><p>之后我们往下滑找到Pinyin的选项</p><p><img src="/arch-linux%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B%E4%B8%89/image-20230112144413247.png" alt="image-20230112144413247"></p><p><img src="/arch-linux%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B%E4%B8%89/image-20230112144430181.png" alt="image-20230112144430181"></p><p>打开之后我们可以看见enable cloud  pinyin启用云拼音</p><p>之后我们往下找到</p><p><img src="/arch-linux%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B%E4%B8%89/image-20230112144524976.png" alt="image-20230112144524976"></p><p>点击cloud pinyin这一行</p><p><img src="/arch-linux%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B%E4%B8%89/image-20230112144608690.png" alt="image-20230112144608690"></p><p>我们将其改为baidu之后OK即可云拼音就设置成功了</p><h3 id="2-本地字库"><a href="#2-本地字库" class="headerlink" title="2. 本地字库"></a>2. 本地字库</h3><p>我们安装一些字库</p><p><code>sudo pacman -S fcitx5-pinyin-zhwiki fcitx5-pinyin-moegirl</code></p><p>安装好之后就可以使用了</p><h1 id="第二部分-背景图片"><a href="#第二部分-背景图片" class="headerlink" title="第二部分 背景图片"></a>第二部分 背景图片</h1><p>这里我们安装一个壁纸和壁纸软件以及混合器</p><p><code>sudo pacman -S feh picom archlinux-wallpaper</code></p><p>当然这里也可以使用自己喜欢的壁纸咱们后面再说</p><p>这里的archlinux-wallpaper会放在&#x2F;usr&#x2F;share&#x2F;backgrouds&#x2F;archlinux文件夹下，也可以自己创建一个文件夹放自己喜欢的壁纸</p><p>之后用<code>feh --bg-fill --randomize /usr/share/backgrounds/archlinux/* </code></p><p>回车（enter）之后就可以看到壁纸了（看不到的话可能是终端挡住了我们用win+2切换到第二个桌面就可以看到了）</p><p>这里的archlinux可以改成自己的壁纸文件夹可以把*换成指定的壁纸名称如果是*号的话就是整个文件夹随机选取</p><p>之后我们去修改一下启动文件</p><p><code>sudo vim ~/.xinitrc</code></p><p>在最下面写上</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">fcitx5 &amp;</span><br><span class="line">feh --bg-fill --randomize /usr/share/backfrounds/archlinux/*</span><br><span class="line">picom -b</span><br><span class="line">exec slstatus</span><br><span class="line">exec dwm</span><br></pre></td></tr></table></figure><p>最后我们开始的时候安装了udisks2的U盘识别的软件我们需要开机启动一下</p><p><code>sudo systemctl enable udisks2</code></p><p>重启即可</p>]]></content>
      
      
      <categories>
          
          <category> arch linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> arch linux安装教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>arch linux安装（到U盘中）教程（三 suckless三件套）</title>
      <link href="/2023/01/12/arch-linux%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B%E4%B8%89/"/>
      <url>/2023/01/12/arch-linux%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B%E4%B8%89/</url>
      
        <content type="html"><![CDATA[<h2 id="suckless三件套"><a href="#suckless三件套" class="headerlink" title="suckless三件套"></a>suckless三件套</h2><h2 id="下载安装"><a href="#下载安装" class="headerlink" title="下载安装"></a>下载安装</h2><p>由于是安装到U盘里面的所以我们不用桌面环境用更为简洁高效的dwm</p><p>窗口管理器，这个是由<a href="https://suckless.org/">suckless</a>这个组织开发维护的，源代码是C语言写的中共才不到两千行</p><p>首先我们创建一个文件夹夹专门放dwm（窗口管理器）以及st（终端）dmenu（启动）</p><p>重启之后我们就可以用用户名密码登录了</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo pacman -S git（如果没有安装git的话需要安装一下）</span><br><span class="line">mkdir suckless</span><br><span class="line">cd suckless</span><br><span class="line">git clone https://git.suckless.org/dwm</span><br><span class="line">git clone https://git.suckless.org/st</span><br><span class="line">git clone https://git.suckless.org/dmenu</span><br><span class="line">git clone https://git.suckless.org/slstatus</span><br></pre></td></tr></table></figure><p>说是三件套多安装了一个slstatus有了后面配置状态栏的</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd dwm</span><br><span class="line">sudo make clean install</span><br><span class="line">cd ..</span><br><span class="line">cd st</span><br><span class="line">sudo make clean install</span><br><span class="line">cd ..</span><br><span class="line">cd dmenu</span><br><span class="line">sudo make clean install</span><br><span class="line">cd ..</span><br><span class="line">cd slstatus</span><br><span class="line">sudo make clean install</span><br></pre></td></tr></table></figure><p>到这里就将dwm+st+dmenu三个下载安装完成了</p><p>这里还需要安装一下启动所需要的软件</p><p><code>sudo pacman -S xorg-xinit（如果刚刚没有安装的话这里要安装上</code></p><p><code>sudo pacman -S udisks2 udiskie pcmanfm</code>（U盘以及图形的文件管理器）</p><p><code>sudo pacman -S feh</code>（背景图片）</p><p>之后将xinit的配置文件复制到用户目录xx</p><p><code>cp /etc/X11/xinit/xinitrc ~/.xinitrc</code></p><p><code>sudo vim .xinitrc</code></p><img src="/2023/01/12/arch-linux%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B%E4%B8%89/image-20230112135301064.png" class=""><p><img src="/arch-linux%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B%E4%B8%89/image-20230112135301064.png" alt="image-20230112135301064"></p><p>将文件最后的这几行都删掉改为<code>exec dwm</code></p><img src="/2023/01/12/arch-linux%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B%E4%B8%89/image-20230112135359758.png" class=""><p><img src="/arch-linux%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B%E4%B8%89/image-20230112135359758.png" alt="image-20230112135359758"></p><p>保存退出即可</p><p>这个时候我们用命令<code>startx</code>就可以进入dwm了</p><h2 id="2-dwm使用"><a href="#2-dwm使用" class="headerlink" title="2. dwm使用"></a>2. dwm使用</h2><img src="/2023/01/12/arch-linux%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B%E4%B8%89/image-20230112135503884.png" class=""><p><img src="/arch-linux%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B%E4%B8%89/image-20230112135503884.png" alt="image-20230112135503884"></p><p>进入dwm之后就可以看到类似的界面了</p><p>可以用alt+shift+回车（enter）打开终端st</p><p>alt+shift+c关闭窗口</p><p>dwm的三种模式alt+t（平铺模式）以及alt+f（浮动模式）以及alt+m（最大化）还有一些alt+j、k左右窗口中移动以及alt+h、l调整左右窗口大小等等</p><p>以及其他用法可以自行上网看一看视频这里并不好描述</p><p>或者去看配置文件后面会讲到</p><h2 id="dmenu"><a href="#dmenu" class="headerlink" title="dmenu"></a>dmenu</h2><p>按alt+p可以看见上面会弹出dmenu了输入程序名称即可打开</p><p>按esc退出dmenu</p><p>比如我们这里用火狐浏览器举例</p><p><code>sudo pacman -S firefox</code></p><p>首先安装firefox</p><p>安装好后alt+p打开dmenu输入firefox可以看到右边会出现可以用tab补全之后回车（enter）即可打开浏览器alt+shift+c关闭</p><img src="/2023/01/12/arch-linux%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B%E4%B8%89/image-20230112140128207.png" class=""><p><img src="/arch-linux%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B%E4%B8%89/image-20230112140128207.png" alt="image-20230112140128207"></p><h2 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h2><p>进入dwm的文件夹可以看到</p><img src="/2023/01/12/arch-linux%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B%E4%B8%89/image-20230112140510110.png" class=""><p><img src="/arch-linux%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B%E4%B8%89/image-20230112140510110.png" alt="image-20230112140510110"></p><p>confi.def.h和config.h就是配置文件</p><p>打开那个都可以config.h是由config.def.h来的建议去直接更改config.def.h</p><p>有<code>sudo vim config.def.h</code>打开配置文件</p><h3 id="第一部分-外观"><a href="#第一部分-外观" class="headerlink" title="第一部分 外观"></a>第一部分 外观</h3><img src="/2023/01/12/arch-linux%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B%E4%B8%89/image-20230112140718130.png" class=""><p><img src="/arch-linux%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B%E4%B8%89/image-20230112140718130.png" alt="image-20230112140718130"></p><p>这里可以看到最开头是一些外观有关的以及字体这里咱们先不改等打完补丁没有问题之后在进行修改</p><h3 id="第二部分标签"><a href="#第二部分标签" class="headerlink" title="第二部分标签"></a>第二部分标签</h3><img src="/2023/01/12/arch-linux%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B%E4%B8%89/image-20230112140808394.png" class=""><p><img src="/arch-linux%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B%E4%B8%89/image-20230112140808394.png" alt="image-20230112140808394"></p><p>这里的1~9就是左上角的一些东西我们可以根据自己的需要更改</p><p>比如我们第一个桌面要打开终端就可以把1改为terminal，第二个桌面打开文件就可以把2改为file等等或者改为其他的小图标等等</p><h3 id="第三部分-模式"><a href="#第三部分-模式" class="headerlink" title="第三部分 模式"></a>第三部分 模式</h3><img src="/2023/01/12/arch-linux%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B%E4%B8%89/image-20230112141046314.png" class=""><p><img src="/arch-linux%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B%E4%B8%89/image-20230112141046314.png" alt="image-20230112141046314"></p><p>这里可以看到三种模式[]&#x3D;和&gt;&lt;&gt;和[M]三种模式也可以自己修改</p><p>比如把[]&#x3D;改为平铺把&gt;&lt;&gt;改为浮动可能更好理解一些</p><p>这里我就不做修改了</p><h3 id="第四部分-按键"><a href="#第四部分-按键" class="headerlink" title="第四部分 按键"></a>第四部分 按键</h3><img src="/2023/01/12/arch-linux%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B%E4%B8%89/image-20230112141337237.png" class=""><p><img src="/arch-linux%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B%E4%B8%89/image-20230112141337237.png" alt="image-20230112141337237"></p><p>这里我们可以看到一个modkey默认是Mod1Mask这个是alt我们一般是改为Mod4Mask就是我们的win键</p><p>以后就可以使用win+shift+回车（enter）打开终端以及win+p打开dmenu等</p><p>就是将alt用win替换了因为在有一些应用中alt可能有一些别的左右所以我们用win键替换、</p><img src="/2023/01/12/arch-linux%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B%E4%B8%89/image-20230112141615270.png" class=""><p><img src="/arch-linux%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B%E4%B8%89/image-20230112141615270.png" alt="image-20230112141615270"></p><p>再往下面就是按键的一些说明比如第一行MODKEYxk_p</p><p>就是win+p打开dmenu</p><p>第二行MODKEY|ShiftMaskxk_Return 就是win+shift+回车（就是return）打开terminal就是终端了</p><p>可以根据习惯自己更改</p><p>更改完毕之后就可以：wq保存退出了</p><p>如果报错的话有可能是没有权限看看有没有用sudo vim</p><p>之后我们将config.h删除由于我们是直接修改的config.def.h所以需要重新生成config.h文件<code>sudo rm -r config.h</code>删除config.h之后</p><p><code>sudo make clean install</code>重新安装即可</p><p>我们用alt+shift+q退出dwm</p><p>再次输入<code>startx</code>进入dwm配置就更改完成了看看win+shift+回车（enter）有没有生效</p>]]></content>
      
      
      <categories>
          
          <category> arch linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> arch linux安装教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>arch linux安装（到U盘中）教程（二 基础设置）</title>
      <link href="/2023/01/12/arch-linux%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B%E4%BA%8C/"/>
      <url>/2023/01/12/arch-linux%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B%E4%BA%8C/</url>
      
        <content type="html"><![CDATA[<h1 id="arch的基础设置"><a href="#arch的基础设置" class="headerlink" title="arch的基础设置"></a>arch的基础设置</h1><h2 id="1-进入系统"><a href="#1-进入系统" class="headerlink" title="1. 进入系统"></a>1. 进入系统</h2><p>接上一篇输入用户名root以及密码之后就可以进入系统了</p><img src="/2023/01/12/arch-linux%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B%E4%BA%8C/image-20230112113948506.png" class=""><p><img src="/arch-linux%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B%E4%BA%8C/image-20230112113948506.png" alt="image-20230112113948506"></p><p>可以看到@后面是192这是默认的系统名称下面进行更改</p><h2 id="2-连接网络"><a href="#2-连接网络" class="headerlink" title="2. 连接网络"></a>2. 连接网络</h2><p>输入<code>nmtui</code>打开网络界面</p><img src="/2023/01/12/arch-linux%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B%E4%BA%8C/image-20230112114221279.png" class=""><p><img src="/arch-linux%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B%E4%BA%8C/image-20230112114221279.png" alt="image-20230112114221279"></p><p>第一个选项</p><img src="/2023/01/12/arch-linux%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B%E4%BA%8C/image-20230112114242635.png" class=""><p><img src="/arch-linux%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B%E4%BA%8C/image-20230112114242635.png" alt="image-20230112114242635"></p><p>用方向键将光标移动到add添加一个网络，如果是网线的话在左边可以看到</p><img src="/2023/01/12/arch-linux%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B%E4%BA%8C/image-20230112114347794.png" class=""><p> <img src="/arch-linux%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B%E4%BA%8C/image-20230112114347794.png" alt="image-20230112114347794"></p><p>第一行（Profile name）填写wifi的名称（随意就可以）</p><p>第二行（Device）写无线网卡的名称（可以在终端中用<code>ip addr</code>查看默认是wlan0也有可能不一样）</p><p>第三行（SSID）才是要连接的wifi的名称比如CMCC-xxx-5G</p><p>第四行（Mode）默认</p><p>第五行（Security）按回车（enter）用wpa这个就可以</p><img src="/2023/01/12/arch-linux%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B%E4%BA%8C/image-20230112114649791.png" class=""><p><img src="/arch-linux%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B%E4%BA%8C/image-20230112114649791.png" alt="image-20230112114649791"></p><p>之后输入密码</p><img src="/2023/01/12/arch-linux%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B%E4%BA%8C/image-20230112114745966.png" class=""><p><img src="/arch-linux%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B%E4%BA%8C/image-20230112114745966.png" alt="image-20230112114745966"></p><p>输入密码之后直接ok就可以其他的不用动了</p><img src="/2023/01/12/arch-linux%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B%E4%BA%8C/image-20230112114823132.png" class=""><p><img src="/arch-linux%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B%E4%BA%8C/image-20230112114823132.png" alt="image-20230112114823132"></p><p>之后左边就可以看到wifi了一路返回就可以了</p><p>退出之后可以用<code>ping -c 4 baidu.com</code>测试一下</p><img src="/2023/01/12/arch-linux%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B%E4%BA%8C/image-20230112114932172.png" class=""><p><img src="/arch-linux%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B%E4%BA%8C/image-20230112114932172.png" alt="image-20230112114932172"></p><p>如果出现连接时间就说明以及连接成功了</p><p>之后<code>pacman -Syy</code>同步一下就可以了</p><h2 id="3-重命名主机名称"><a href="#3-重命名主机名称" class="headerlink" title="3. 重命名主机名称"></a>3. 重命名主机名称</h2><p>输入命令<code>vim /etc/hostname</code></p><p>进入之后按a进行输入名字可以随意这里就用archlinux了，起一个直接喜欢的名字即可建议不要太长</p><img src="/2023/01/12/arch-linux%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B%E4%BA%8C/image-20230112115107887.png" class=""><p><img src="/arch-linux%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B%E4%BA%8C/image-20230112115107887.png" alt="image-20230112115107887"></p><p>之后按esc退出输入模式然后输入（冒号保存退出）:wq即可之后重启就会生效了，这里就先不重启了先进行下一步</p><p>将主机地址进行映射</p><p><code>vim /etc/hosts</code>（可以用tab补全这个文件是已经存在在系统里面了）</p><img src="/2023/01/12/arch-linux%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B%E4%BA%8C/image-20230112115654692.png" class=""><p><img src="/arch-linux%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B%E4%BA%8C/image-20230112115654692.png" alt="image-20230112115654692"></p><p>第一行输入127.0.0.1按一个tab键localhost</p><p>第二行两个冒号：：1两个tab键localhost</p><p>第三行这里注意是127.0.1.1一个tab键加上刚刚的主机名称和localdomain</p><p>应该是<code>127.0.1.1archlinux.localdomainarchlinux</code></p><p>保存退出即可</p><h2 id="4-设置时间"><a href="#4-设置时间" class="headerlink" title="4. 设置时间"></a>4. 设置时间</h2><p><code>timedatectl set-timezone Asia/Shanghai</code></p><p>第一步设置时区大陆的代表地区是亚洲上海注意不是北京（可以用tab补全）</p><p><code>timedatectl set-ntp true</code></p><p>第二步打开网络同步</p><p>之后用<code>timedatectl status</code>查看一下时间</p><img src="/2023/01/12/arch-linux%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B%E4%BA%8C/image-20230112120339029.png" class=""><p><img src="/arch-linux%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B%E4%BA%8C/image-20230112120339029.png" alt="image-20230112120339029"></p><p>确定时间正确即可</p><h2 id="5-添加普通用户"><a href="#5-添加普通用户" class="headerlink" title="5. 添加普通用户"></a>5. 添加普通用户</h2><p>root的用户的权限太大了所以要添加一个普通的用户并且生成一个用户文件夹</p><p><code>useradd --create-home 用户名</code></p><p>创建之后可以用<code>id 用户名</code>查看用户</p><p>再用<code>passwd 用户名</code>给用户添加一个密码</p><p>添加好后还需要将用户添加到组里面才可以用sudo命令提权</p><p><code>usermod -aG wheel,users,storage,power,lp,adm,opticla 用户名</code></p><p>添加好后可以用<code>ip 用户名</code>查看一下</p><img src="/2023/01/12/arch-linux%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B%E4%BA%8C/image-20230112120925422.png" class=""><p><img src="/arch-linux%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B%E4%BA%8C/image-20230112120925422.png" alt="image-20230112120925422"></p><p>之后还需要修改一个文件</p><p><code>export EDITOR=vim</code></p><p>之后用<code>viduso</code></p><img src="/2023/01/12/arch-linux%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B%E4%BA%8C/image-20230112121030340.png" class=""><p><img src="/arch-linux%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B%E4%BA%8C/image-20230112121030340.png" alt="image-20230112121030340"></p><p>进入文件之后往下找找到%whell</p><img src="/2023/01/12/arch-linux%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B%E4%BA%8C/image-20230112121110638.png" class=""><p><img src="/arch-linux%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B%E4%BA%8C/image-20230112121110638.png" alt="image-20230112121110638"></p><p>将%whell这一行去掉注释（就是将#删除）之后保存退出即可</p><p>这一步之后重启一下即可</p><h2 id="6-xorg的安装"><a href="#6-xorg的安装" class="headerlink" title="6. xorg的安装"></a>6. xorg的安装</h2><p><code>pacman -S xorg</code></p><img src="/2023/01/12/arch-linux%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B%E4%BA%8C/image-20230112121332004.png" class=""><p><img src="/arch-linux%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B%E4%BA%8C/image-20230112121332004.png" alt="image-20230112121332004"></p><p>这个组里面包含了很多东西如果觉得太多了话可以安装<code>xorg-server</code></p><p>我这里就全部安装了</p><p><code>pacman -S xorg xorg-xinit</code></p><p>回车（enter）下载即可</p><h2 id="7-字体安装"><a href="#7-字体安装" class="headerlink" title="7. 字体安装"></a>7. 字体安装</h2><p>字体的话就一次性安装完，包括中英文的一下常用字体</p><ol><li><p>安装之前首先生成一下系统的字体</p><p><code>vim /etc/locale.gen</code></p><p>进去之后用<code>/</code>进入搜索模式输入en_US.UTF-8</p><img src="/2023/01/12/arch-linux%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B%E4%BA%8C/image-20230112121841015.png" class=""><p><img src="/arch-linux%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B%E4%BA%8C/image-20230112121841015.png" alt="image-20230112121841015"></p><p>找到后将utf-8的英文字体去注释即可</p><p>然后esc退出输入模式用<code>/</code>进入搜索模式输入zh_CN</p><img src="/2023/01/12/arch-linux%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B%E4%BA%8C/image-20230112122004794.png" class=""><p><img src="/arch-linux%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B%E4%BA%8C/image-20230112122004794.png" alt="image-20230112122004794"></p><p>将中文的utf-8格式的字体也去注释</p><p>保存退出即可</p><p><code>vim /etc/locale.conf</code>进入之后输入一句话</p><img src="/2023/01/12/arch-linux%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B%E4%BA%8C/image-20230112122129419.png" class=""><p><img src="/arch-linux%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B%E4%BA%8C/image-20230112122129419.png" alt="image-20230112122129419"></p><p>也可以用<code>LANG=zn_CN.UTF-8</code>不过先不建议生成中文可能出现乱码</p><p>这里我们就用<code>LANG=en_US.UTF-8</code>就行</p><p>之后保存退出</p><p>用<code>locale-gen</code>命令生成即可</p><img src="/2023/01/12/arch-linux%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B%E4%BA%8C/image-20230112122353087.png" class=""><p><img src="/arch-linux%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B%E4%BA%8C/image-20230112122353087.png" alt="image-20230112122353087"></p></li><li><p>安装字体</p><p>（这里也可以用tab补全）</p><p><code>pacman -S ttf-dejavu ttf-droid ttf-font-awesome otf-font-awesome ttf-lato ttf-liberation ttf-linux-libertine ttf-opensans ttf-roboto ttf-ubuntu-font-family</code></p></li></ol><p>这一写是跟英文有关常用的字体接下来是中文的字体如果不按照中文字体在比如浏览器看到中文的时候可能会出现乱码</p><p><code>pacman -S ttf-hannom noto-fonts noto-fonts-extra noto-fonts-emoji noto-fonts-cjk adobe-source-code-pro-fonts adobe-source-sans-fonts adobe-source-serif-fonts adobe-source-han-sans-cn-fonts adobe-source-han-sans-hk-fonts adobe-source-han-sans-tw-fonts adobe-source-han-serif-cn-fonts wqy-zenhei wqy-microhei</code></p><p>安装即可，建议用tab键补全手打的容易打错</p><p>之后打开渲染据说能媲美苹果的字体</p><p><code>vim /etc/porfile.d/freetype2.sh</code></p><p>打开后将最后一行去注释即可</p><img src="/2023/01/12/arch-linux%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B%E4%BA%8C/image-20230112123554892.png" class=""><p><img src="/arch-linux%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B%E4%BA%8C/image-20230112123554892.png" alt="image-20230112123554892"></p><p>保存退出</p><h2 id="8-显卡驱动"><a href="#8-显卡驱动" class="headerlink" title="8. 显卡驱动"></a>8. 显卡驱动</h2><p>显卡里面住院分为三类intel和amd以及N卡</p><ol><li><p>intel</p><p><code>pacman -S Vulkan-intel mesa</code></p><p>这里不建议安装xf86-video-intel这个官网有说明为什么</p></li><li><p>amd</p><p><code>pacman -S mesa vulkan-radeon</code></p></li><li><p>N卡</p><p><code>pacman -S nvidia nvidia-settings nvidia-utils</code></p></li></ol><p>N卡的话安装这几个也不一定行，因为N卡的驱动在linux并不是很友好</p><p>有一些型号是需要自己去官网下载的</p><h2 id="9-声音系统"><a href="#9-声音系统" class="headerlink" title="9. 声音系统"></a>9. 声音系统</h2><p><code>pacman -S alsa-utils pulseaudio pulseaudio-bluetooth</code></p><p>之后就可以用alsamixer设置声音了以及一下蓝牙音响所需要的</p><p>蓝牙后面会讲到</p><p>之后重启一下就可以了这里要注意重启之后用普通的用户名和密码登录之后</p><p>有一些命令是需要带sudo的</p><h2 id="10-添加aur"><a href="#10-添加aur" class="headerlink" title="10. 添加aur"></a>10. 添加aur</h2><p>这里常用的是yay但是paru更新一些所以这里咱们用最新的paru</p><p>由于paru需要用git安装所以先下载git</p><p><code>sudo pacman -S git</code></p><p><code>git clone https://aur.archlinux.org/paru.git</code></p><p>克隆之后cd到paru的目录里面</p><p>这里需要用到makepkg我们先去配置一下</p><p><code>sudo vim /etc/makepkg.conf</code></p><p>找到MAKEFLAGS&#x3D;这一行改为<code>MAKEFLAGS=&quot;j$(nproc)&quot;</code></p><img src="/2023/01/12/arch-linux%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B%E4%BA%8C/image-20230112125042838.png" class=""><p><img src="/arch-linux%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B%E4%BA%8C/image-20230112125042838.png" alt="image-20230112125042838"></p><p>保存退出即可之后在paru文件夹在执行<code>makepkg -si</code></p><p>网速过慢可能下载不到需要好一点的网络</p><p>安装好后就可以使用paru了</p><p>比如<code>paru wps</code></p><p>就可以用paru来安装wps</p><p>和pacman很类似</p><p>这里我们简单配置一下<code>vim /etc/paru.conf</code>之后将BottomUp</p><img src="/2023/01/12/arch-linux%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B%E4%BA%8C/image-20230112125449663.png" class=""><p><img src="/arch-linux%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B%E4%BA%8C/image-20230112125449663.png" alt="image-20230112125449663"></p><p>选项去注释一下，可将相关性高的放在下面离近一些</p><p>修改完后保存退出即可</p><p>这里用wps举例子输入<code>paru wps</code></p><img src="/2023/01/12/arch-linux%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B%E4%BA%8C/image-20230112125655631.png" class=""><p><img src="/arch-linux%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B%E4%BA%8C/image-20230112125655631.png" alt="image-20230112125655631"></p><p>我们一般安装的是第9个和第11个中文版和wps的中文的字体</p><p>我们输入9 11就可以了</p><img src="/2023/01/12/arch-linux%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B%E4%BA%8C/image-20230112125804980.png" class=""><p><img src="/arch-linux%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B%E4%BA%8C/image-20230112125804980.png" alt="image-20230112125804980"></p><p>回车（enter）即可，安装之前会显示一下脚步里面写的是什么我们按一下q退出就可以，按Y选择安装就行，之后wps就安装好了，但是我们现在还使用不了后面会说到</p><h2 id="11-添加软件源"><a href="#11-添加软件源" class="headerlink" title="11. 添加软件源"></a>11. 添加软件源</h2><p>一般常用的软件源有清华或者中科大的这里我们用清华的</p><p>软件源里面包含了一下非官方但是常用的一些软件</p><p><code>sudo vim /etc/pacman.conf</code></p><p>往下找找到官方的几个源</p><img src="/2023/01/12/arch-linux%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B%E4%BA%8C/image-20230112130230358.png" class=""><p><img src="/arch-linux%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B%E4%BA%8C/image-20230112130230358.png" alt="image-20230112130230358"></p><p>在下面加上清华的源</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[archlinux]</span><br><span class="line">Server = https://mirrors.tuna.tsinghua.edu.cn/archlinux/$arch</span><br></pre></td></tr></table></figure><p>之后保存退出即可</p><p>之后安装<code>sudo pacman -S archlinuxcn-keyring</code></p><p><code>sudo pacman -Syy</code>同步一下就可以看到清华的源了</p><img src="/2023/01/12/arch-linux%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B%E4%BA%8C/image-20230112130520494.png" class=""><p><img src="/arch-linux%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B%E4%BA%8C/image-20230112130520494.png" alt="image-20230112130520494"></p><p>之后重启即可</p>]]></content>
      
      
      <categories>
          
          <category> arch linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> arch linux安装教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>arch linux安装（到U盘中）教程（一 arch安装）</title>
      <link href="/2023/01/11/arch-linux%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/"/>
      <url>/2023/01/11/arch-linux%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="第一部分-介绍"><a href="#第一部分-介绍" class="headerlink" title="第一部分 介绍"></a>第一部分 介绍</h1><p>将arch安装到U盘中实现linux to go的效果</p><p>用的是arch+suckless三件套archlinux+dwm+st+dmenu由于是安装到U盘中的所以就不搞其他的花里胡哨的了够用就行，当然了普通的wps，qq，浏览器肯定都是可以正常用的</p><p>利用的是ventoy工具</p><p>这里可以利用virtualbox创建虚拟机之后将vdi文件直接复制到U盘里面，但是需要用到ventoy的插件，要将插件安装进linux系统中，还有一些小问题</p><p>所以我们这里直接利用ventory将U盘最后一段保留分区，直接将系统安装到U盘中</p><p>其余的空间可以当正常的U盘使用并且可以做启动U盘放入PE系统等等</p><h1 id="第二部分（准备工作）"><a href="#第二部分（准备工作）" class="headerlink" title="第二部分（准备工作）"></a>第二部分（准备工作）</h1><h2 id="1-容量"><a href="#1-容量" class="headerlink" title="1.容量"></a>1.容量</h2><p>首先肯定需要一个U盘，建议不低于128g（64g也不是不可以），速度的话看需求肯定是越快越好，如果用固态的话会更好。</p><h2 id="2-速度"><a href="#2-速度" class="headerlink" title="2. 速度"></a>2. 速度</h2><p>没有什么特殊需求的话普通U盘就够用了linux性能本来就不错，这里我用的是一个三星bar+的128gU盘（链接在下方）读取稳定在400m&#x2F;s以内，写入70m&#x2F;s和官网给的参数差不多，非常稳定不容易发热。</p><h2 id="3-空间分配"><a href="#3-空间分配" class="headerlink" title="3. 空间分配"></a>3. 空间分配</h2><p>容量的话正常使用（主要看应用比如就用用浏览器，QQ，wps，音乐等正常应用的话）一二十个g就够用了，一般不低于40个g左右</p><h2 id="4-清单（附下载链接）"><a href="#4-清单（附下载链接）" class="headerlink" title="4. 清单（附下载链接）"></a>4. 清单（附下载链接）</h2><ul><li><p>硬件</p><ol><li><a href="https://item.jd.com/7386535.html">U盘</a></li><li>近几年的随便一款电脑（支持uefi）</li></ol></li><li><p>软件</p><ol><li><p><a href="https://www.ventoy.net/cn/download.html">ventoy</a></p></li><li><p><a href="https://archlinux.org/download/">arch的iso文件</a></p></li><li><p><a href="https://www.diskgenius.cn/download.php">DiskGenius</a></p></li></ol></li></ul><p>注：这里下载好后放在桌面即可不需要安装都是免安装的（DiskGenius免费版就可以了）iso的话往下找到中国的镜像站进行下载即可</p><img src="/2023/01/11/arch-linux%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/image-20230111221949158.png" class=""><p>这里可以看到清华的镜像站是两个其实上面的是https的下面的是http的</p><p>点进去之后</p><img src="/2023/01/11/arch-linux%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/image-20230111222047447.png" class=""><p>我们下载第一个iso文件大概七八百m即可</p><h1 id="第三部分-U盘的制作"><a href="#第三部分-U盘的制作" class="headerlink" title="第三部分 U盘的制作"></a>第三部分 U盘的制作</h1><p>将下载好的ventory解压打开</p><img src="/2023/01/11/arch-linux%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/image-20230111215105529.png" class=""><p>运行软件</p><img src="/2023/01/11/arch-linux%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/image-20230111215328202.png" class=""><p>将分区改为GPT格式MBR比较古老了</p><img src="/2023/01/11/arch-linux%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/image-20230111215458615.png" class=""><p>之后点击分区设置</p><img src="/2023/01/11/arch-linux%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/image-20230111215621503.png" class=""><p>文件系统的话默认的exFAT（专门为U盘设计的格式）就可以如果是固态的话可以选择NTFS性能会更好（如果是U盘的话ntfs会减少使用寿命），把下面的保留空间打上勾，然后输入要保留的大小这个就是archlinux的空间大小，建议不小于40G即可，这里我分了88个G</p><img src="/2023/01/11/arch-linux%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/image-20230111220106168.png" class=""><p>之后点击确认即可</p><p>选择好设备之后（这里千万别选错了）这里会格式化整个U盘如果有重要资料记得备份，之后点击安装即可需要确认两次</p><p>等待安装成功即可</p><p>安装成功之后即可看到ventoyU盘，可以改名字不影响（尽量不要用中文）</p><img src="/2023/01/11/arch-linux%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/image-20230111220551670.png" class=""><p>这一部分可以当正常的U盘来使用可以放入iso文件当启动盘或者PE系统都可以</p><p>安装好后使用win+x</p><img src="/2023/01/11/arch-linux%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/image-20230111220808884.png" class=""><p>这里打开windows自带的磁盘管理器（K)</p><img src="/2023/01/11/arch-linux%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/image-20230111220856229.png" class=""><p>（由于我用的另一块U盘演示所以容量不一样不过不影响）可以看到前半段是exFAT的正常U盘，中间是ventoy软件的efi分区（arch的efi分区后面会手动添加进来安装arch的时候不需要在进行efi分区），后半段是我们还没有分配的分区，先分配一下后面安装linux的时候还会格式化的。</p><img src="/2023/01/11/arch-linux%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/image-20230111221245435.png" class=""><p>右键新建简单卷然后一直下一步下一步下一步即可</p><img src="/2023/01/11/arch-linux%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/image-20230111221414003.png" class=""><p>在点击下一步四个下一步之后点击完成即可</p><img src="/2023/01/11/arch-linux%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/image-20230111221451309.png" class=""><p>这个时候就添加好了</p><img src="/2023/01/11/arch-linux%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/image-20230111221514609.png" class=""><p>同时在资源管理器中也可以看见了</p><p>到这一步U盘就做好了</p><p>将下载好的arch的iso文件复制到VentoyU盘中注意是前面的U盘中不是后面新建的这个</p><h1 id="第四部分-ventoy启动页面的美化（可选）"><a href="#第四部分-ventoy启动页面的美化（可选）" class="headerlink" title="第四部分 ventoy启动页面的美化（可选）"></a>第四部分 ventoy启动页面的美化（可选）</h1><img src="/2023/01/11/arch-linux%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/image-20230111222216562.png" class=""><p>可以看到ventoy的启动界面并不是很好看（这里可改可不改直接跳过去第五步也可以）</p><p>我们去<a href="https://www.gnome-look.org/browse?cat=109&amp;ord=latest%E8%BF%99%E9%87%8C%E9%9D%A2%E6%9C%89%E5%A5%BD%E5%A4%9Aventoy%E7%9A%84%E4%B8%BB%E9%A2%98%E9%80%89%E4%B8%80%E4%B8%AA%E7%9B%B4%E6%8E%A5%E5%96%9C%E6%AC%A2%E7%9A%84%E7%82%B9%E5%BC%80">https://www.gnome-look.org/browse?cat=109&amp;ord=latest这里面有好多ventoy的主题选一个直接喜欢的点开</a></p><img src="/2023/01/11/arch-linux%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/image-20230111222647000.png" class=""><p>往下找找到files</p><p>下载压缩包即可，这里可能非常慢耐心等等或者开github的加速器</p><img src="/2023/01/11/arch-linux%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/image-20230111222747203.png" class=""><img src="/2023/01/11/arch-linux%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/image-20230111222818548.png" class=""><p>下载好之后解压</p><p>将解压好后的的ventoy文件夹放入做好的ventoyU盘中即可注意是整个ventoy文件夹，比如</p><img src="/2023/01/11/arch-linux%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/image-20230111223428525.png" class=""><p>放入之后下次U盘启动的时候就会有主题了</p><img src="/2023/01/11/arch-linux%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/image-20230111223407369.png" class=""><h1 id="第五部分-从U盘安装arch（正式安装）"><a href="#第五部分-从U盘安装arch（正式安装）" class="headerlink" title="第五部分 从U盘安装arch（正式安装）"></a>第五部分 从U盘安装arch（正式安装）</h1><p>安装arch的过程和普通安装差不多就是efi不一样，顺序可能有点区别但是大体是一样的可以去参考官方的安装过程<a href="https://wiki.archlinuxcn.org/wiki/%E5%AE%89%E8%A3%85%E6%8C%87%E5%8D%97">arch wiki</a></p><h2 id="1-安全启动"><a href="#1-安全启动" class="headerlink" title="1. 安全启动"></a>1. 安全启动</h2><p>部分电脑可能需要关闭安全启动才可以，直接百度搜索自己电脑品牌的安全启动怎么关闭，每个品牌不一样我这里是开机按f2将安全启动关闭之后，使用U盘启动，插入U盘开机按f12（我这里是f12如果不对百度查找一下自己的品牌）进入启动选项选择U盘启动即可</p><h2 id="2-进入安装界面"><a href="#2-进入安装界面" class="headerlink" title="2. 进入安装界面"></a>2. 进入安装界面</h2><p>进入ventoy界面，如果iso文件已经放入U盘中ventoy会自动检查出来的，用上下键选择archlinux的iso回车一路确定即可都是默认第一个选项</p><img src="/2023/01/11/arch-linux%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/image-20230111223733983.png" class=""><p>之后会进入一个类似这样的界面，相当于用一个arch安装另一台arch</p><p>台式机的话应该是会有网线如果是笔记本的话就用iwctl工具箱（台式机可以跳过这一步直接看第4步）</p><h2 id="3-iwctl工具箱（联网）"><a href="#3-iwctl工具箱（联网）" class="headerlink" title="3. iwctl工具箱（联网）"></a>3. iwctl工具箱（联网）</h2><p>   首先输入iwctl</p>   <img src="/2023/01/11/arch-linux%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/image-20230111224513089.png" class=""><p>   进入后输入<code>device list</code></p>   <img src="/2023/01/11/arch-linux%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/image-20230111224636128.png" class=""><p>   会显示出虚拟的网卡名称这里是wlan0</p><ol><li><p>之后输入<code>station wlan0 scan</code>（注意这里的命令是可以用tab键补全的）开启扫描网络</p></li><li><p><code>station wlan0 get-networks</code>显示可以连接的网络比如wifi名叫xxxx</p><p>这里会吧附近搜索到的wifi显示出来</p></li><li><p><code>station wlan0 connect xxxx</code>连接xxxx回车（enter）之后需要输入密码输入即可</p></li></ol><p>   这里连接成功不会提醒的需要退出测试一下</p><p>   用<code>exit</code>退出iwctl工具</p><p>   之后用ping命令测试一下（这里添加了一个4次的参数）</p><p>   <code>ping -c 4 baidu.com</code>  </p>   <img src="/2023/01/11/arch-linux%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/image-20230111225329351.png" class=""><p>可以看到这里就是连接通了</p><h2 id="4-同步（改镜像）"><a href="#4-同步（改镜像）" class="headerlink" title="4. 同步（改镜像）"></a>4. 同步（改镜像）</h2><p>连接好网络之后需要更新一下用到的是pacman更新之前我们先去修改一下镜像源增加一下速度用</p><p>   <code>vim /etc/pacman.d/mirrorlist</code></p><ul><li>打开镜像源文件可以看到里面有好多源咱们只用中国的https即可</li></ul><p>   在vim中输入<code>/</code>就是查找然后输入China找到中国的镜像源将中国的镜像源移动到最前面，也可以把其他国家的删除，按jk上下移动hl左右移动两下d就是删除一行可以用v进入选择模式jkhl移动将China的这一部分选中之后用y复制然后按gg移动到开头用p将China的粘贴上去之后:（冒号）wq回车（enter）就是保存退出</p><ul><li>或者都删了这里用几个常用的<ul><li><code>Sever = https://mirrors.tuna.tsinghua.edu.cn/archlinux/$repo/os/$arch</code></li><li><code>Sever = https://mirrors.ustc.edu.cn/archlinux/$repo/os/$arch</code></li><li><code>Sever = https://mirrors.aliyun.com/archlinux/$repo/os/$arch</code></li><li><code>Sever = https://mirrors.163.com/archlinux/$repo/os/$arch</code></li></ul></li></ul><p>添加好之后执行<code>pacman -Syy</code>进行同步，配置好镜像之后的速度应该很快</p><h2 id="5-分区格式化"><a href="#5-分区格式化" class="headerlink" title="5. 分区格式化"></a>5. 分区格式化</h2><p>同步之后进行分区这里我们只需要分一个系统分区即可（r如果有需要的话可以加一个swap）这里由于系统的内存够用就不分了</p><p>用<code>lsblk</code>查看一下磁盘应该有两个一个自带的固态硬盘还有一个U盘的</p><p>这里我们主要看U盘的（分不清的话看后面的大小就知道了）U盘应该有三个分区我们刚才分的（也有可能是vda什么的）（三个分区的就是了）比如：</p><ul><li><p>sda</p><ul><li>sda1</li><li>sda2</li><li>sda3</li></ul><p>这里sda1是硬盘的前半段用了当U盘以及启动盘使用</p><p>sda2是ventoy的efi文件一会儿arch也需要借用这个不用单独给arch分配efi分区</p><p>sda3就是咱们保留的空间了一会儿arch就要安装到这个里面</p></li></ul><p>可以用cfdisk进行分区输入<code>cfdisk /dev/sda</code>回车（enter）即可不用输入分区数字</p><img src="/2023/01/11/arch-linux%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/image-20230111231130050.png" class=""><p>进入之后可以对照的网上这张图看，应该有三个分区sda1和sda2咱们都不动上下键移动到sda3上面选择类型（type）选择linux  filesystem回车（enter）选择写入（write）y确认即可</p><p>之后进行格式化<code>mkfs.ext4 /dev/sda3</code>这里也可以用比较新一些的xfs</p><p>我这里没有什么特殊需求就继续用ext4了</p><img src="/2023/01/11/arch-linux%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/image-20230111232422290.png" class=""><p>现在大部分的linux系统还是使用是ext4的格式</p><p>格式好之后会有Done完成</p><p>然后用<code>lsblk -f</code>可以查看格式</p><h2 id="6-挂载分区"><a href="#6-挂载分区" class="headerlink" title="6. 挂载分区"></a>6. 挂载分区</h2><p>将分区挂载<code>mount /dev/sda3 /mnt</code>即可</p><h2 id="7-安装arch到U盘中"><a href="#7-安装arch到U盘中" class="headerlink" title="7. 安装arch到U盘中"></a>7. 安装arch到U盘中</h2><p>将linux系统安装到U盘&#x2F;mnt中用pacstrap命令</p><p>   这里我安装的linux-zen的内核对性能有一些优化也可以用linux内核</p><p><code>pacstrap /mnt linux linux-headers linux-firmware base base-devel vim bash-completion</code></p><p>   如果用linux-zen的话就是linux-zen以及linux-zen-headers的头替换linux  回车（enter）即可</p><p>   需要安装大约两个g左右文件</p><h2 id="8-生成表文件"><a href="#8-生成表文件" class="headerlink" title="8. 生成表文件"></a>8. 生成表文件</h2><p>生成表文件并且追加到fstab文件中</p><p>   <code>genfstab -U /mnt &gt;&gt; /mnt/etc/fstab</code></p><p>   之后用cat命令看一下有没有成功</p><p>   <code>cat /mnt/etc/fstab</code></p><p>   输出类似的uuid</p>   <img src="/2023/01/11/arch-linux%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/image-20230111235057923.png" class=""><p>记住uuid&#x3D;后面的下一步要使用</p><h2 id="9-进入新系统"><a href="#9-进入新系统" class="headerlink" title="9. 进入新系统"></a>9. 进入新系统</h2><p>用chroot命令进入新系统</p><p>   <code>arch-chroot /mnt</code></p>   <img src="/2023/01/11/arch-linux%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/image-20230111235208928.png" class=""><h2 id="10-新系统更新"><a href="#10-新系统更新" class="headerlink" title="10. 新系统更新"></a>10. 新系统更新</h2><p>进入新系统之后更新一下<code>pacman -Syy</code>如果速度慢的话就去看一下镜像源还是在<code>vim /etc/pacman.d/mirrorlist</code>里面</p><h2 id="11-安装一下网络工具以及一些启动项"><a href="#11-安装一下网络工具以及一些启动项" class="headerlink" title="11. 安装一下网络工具以及一些启动项"></a>11. 安装一下网络工具以及一些启动项</h2><pre><code>pacman -S grub efibootmgr efivar networkmanager intel-ucode</code></pre><p>如果是amd的cpu就用amd-ucode替换intel-ucode</p><p>回车（enter）安装即可</p><p>安装好后修改一下启动参数</p><p><code>vim /etc/default/grub</code></p><img src="/2023/01/11/arch-linux%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/image-20230112000109131.png" class=""><p>之后用<code>grub-mkconfig -o /boot/grub/grub.cfg</code>写入配置</p><p>安装好用<code>systemctl enable NetworkManager</code>(这里都可以用tab补全)启动网络服务下一次就可以自动联网了</p><h2 id="12-添加密码"><a href="#12-添加密码" class="headerlink" title="12. 添加密码"></a>12. 添加密码</h2><p>用<code>password</code>给新系统的默认的root用户创建一个密码</p><p>这里注意输入的密码是不会显示出来的需要输入两遍</p><p>之后退出新系统即可<code>exit</code></p><p>然后卸载挂载分区</p><p><code>umount /mnt</code></p><p>之后<code>reboot</code>重启即可这里重启不进行任何操作应该会默认进入主系统</p><h2 id="13-手动写efi"><a href="#13-手动写efi" class="headerlink" title="13. 手动写efi"></a>13. 手动写efi</h2><p>在主系统中使用diskgenius软件查看arch的efi文件</p><img src="/2023/01/11/arch-linux%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/image-20230112001247418.png" class=""><img src="/2023/01/11/arch-linux%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/image-20230112001302518.png" class=""><p>在boot文件夹中找到这个记住vmlinuz-linux-zen和initramfs-linux-zen.img</p><p>这两个（可能和我的不一样）记住名字一会儿要用</p><p>然后打开ventoryU盘</p><img src="/2023/01/11/arch-linux%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/image-20230112001504757.png" class=""><p>打开里面的ventoy文件夹如果跟着我做了第三部分的美化的话会有这个文件夹的如果没有就直接创建一个ventoy的文件夹在里面创建一个（ventoy_grub.cfg）文件右键编辑用记事本打开里面输入</p><figure class="highlight plaintext"><figcaption><span>"Arch Linux" --class</span></figcaption><table><tr><td class="code"><pre><span class="line">    set root=($vtoydev,gpt3)</span><br><span class="line">    linux /boot/vmlinuz-linux-zen root=UUID=facxxxx（这里的uuid换成自己的）</span><br><span class="line">    initrd /boot/initramfs-linux-zen.img</span><br><span class="line">    boot</span><br><span class="line">&#125;</span><br><span class="line">menuentry &#x27;&lt;-- Return to previous menu [Esc]&#x27; --class=vtoyret VTOY_RET &#123;</span><br><span class="line">    echo &#x27;Return ...&#x27;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>更换自己的uuid以及刚刚的vmlinuz-linux以及.img的其他的不用动保存关闭即可</p><img src="/2023/01/11/arch-linux%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/image-20230112002153778.png" class=""><h2 id="14-从ventoy进入系统"><a href="#14-从ventoy进入系统" class="headerlink" title="14. 从ventoy进入系统"></a>14. 从ventoy进入系统</h2><p>之后重启f12进入ventoy之后f6进入自定义的菜单可以看到arch linux的选项回车（enter）就可以进入新系统了</p><h2 id="15-输入用户名root以及密码"><a href="#15-输入用户名root以及密码" class="headerlink" title="15. 输入用户名root以及密码"></a>15. 输入用户名root以及密码</h2> <img src="/2023/01/11/arch-linux%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/image-20230112002310646.png" class="">]]></content>
      
      
      <categories>
          
          <category> arch linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> arch linux安装教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>最新最干净的win11 22H2安装及美化</title>
      <link href="/2022/12/29/%E6%9C%80%E6%96%B0%E6%9C%80%E5%B9%B2%E5%87%80%E7%9A%84win11-22H2%E5%AE%89%E8%A3%85%E5%8F%8A%E7%BE%8E%E5%8C%96/"/>
      <url>/2022/12/29/%E6%9C%80%E6%96%B0%E6%9C%80%E5%B9%B2%E5%87%80%E7%9A%84win11-22H2%E5%AE%89%E8%A3%85%E5%8F%8A%E7%BE%8E%E5%8C%96/</url>
      
        <content type="html"><![CDATA[<h1 id="第一部分-win11-22H2的安装"><a href="#第一部分-win11-22H2的安装" class="headerlink" title="第一部分 win11 22H2的安装"></a>第一部分 win11 22H2的安装</h1><p>安装系统的方式</p><ol><li><p>一键装机（第三方工具）</p><ul><li>优点：简单</li><li>但是不干净</li></ul></li><li><p>微软官方 </p><ul><li>官方提供的一键装机</li></ul></li><li><p>介质（常用U盘）</p></li></ol><p>这里用的是U盘安装的方式</p><ul><li><p>软件</p><ul><li>ISO文件（系统文件）</li><li>工具（将ISO文件写入U盘中的工具）<ul><li>rufus</li><li>ventoy（推荐）</li></ul></li></ul></li><li><p>硬件</p><ul><li>U盘（写入15m&#x2F;s，推荐三星bar+写入60-70m&#x2F;s）</li><li>ISO文件官网的（干净）但是（没有驱动）</li><li>需要外接有线的鼠标键盘以及网线</li></ul></li></ul><p>鼠标键盘可以不用但是网线需要接上</p><p>网</p><ul><li>第三方</li><li>手机</li><li>官网的驱动</li></ul><p>启动盘+键盘+鼠标+网线</p><p>！！！备份数据</p><p>！！！备份数据！！！备份数据！！！备份数据！！！备份数据！！！备份数据</p><p>第一步关闭安全启动biso</p>]]></content>
      
      
      
        <tags>
            
            <tag> win11 22H2安装及美化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>李珣同款爱心代码</title>
      <link href="/2022/11/12/%E6%9D%8E%E7%8F%A3%E5%90%8C%E6%AC%BE%E7%88%B1%E5%BF%83%E4%BB%A3%E7%A0%81/"/>
      <url>/2022/11/12/%E6%9D%8E%E7%8F%A3%E5%90%8C%E6%AC%BE%E7%88%B1%E5%BF%83%E4%BB%A3%E7%A0%81/</url>
      
        <content type="html"><![CDATA[<h1 id="1-C-的"><a href="#1-C-的" class="headerlink" title="1. C++的"></a>1. C++的</h1><p>效果图</p><img src="/2022/11/12/%E6%9D%8E%E7%8F%A3%E5%90%8C%E6%AC%BE%E7%88%B1%E5%BF%83%E4%BB%A3%E7%A0%81/aixin-1.png" class=""><p>源代码</p><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;Windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">float</span> x, y, a;</span><br><span class="line">    <span class="keyword">for</span> (y = <span class="number">1.5</span>; y &gt; <span class="number">-1.5</span>; y -= <span class="number">0.1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (x = <span class="number">-1.5</span>; x &lt; <span class="number">1.5</span>; x += <span class="number">0.05</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            a = x * x + y * y - <span class="number">1</span>;</span><br><span class="line">            <span class="built_in">putchar</span>(a * a * a - x * x * y * y * y &lt;= <span class="number">0.0</span> ? <span class="string">&#x27;*&#x27;</span> : <span class="string">&#x27; &#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">system</span>(<span class="string">&quot;color 0c&quot;</span>);</span><br><span class="line">        <span class="built_in">putchar</span>(<span class="string">&#x27;\n&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="2-html的"><a href="#2-html的" class="headerlink" title="2. html的"></a>2. html的</h1><p>效果图</p><img src="/2022/11/12/%E6%9D%8E%E7%8F%A3%E5%90%8C%E6%AC%BE%E7%88%B1%E5%BF%83%E4%BB%A3%E7%A0%81/aixin-2.png" class=""><p>源代码</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">HTML</span> <span class="keyword">PUBLIC</span> <span class="string">&quot;-//W3C//DTD HTML 4.0 Transitional//EN&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">HTML</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">HEAD</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">TITLE</span>&gt;</span> New Document <span class="tag">&lt;/<span class="name">TITLE</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">META</span> <span class="attr">NAME</span>=<span class="string">&quot;Generator&quot;</span> <span class="attr">CONTENT</span>=<span class="string">&quot;EditPlus&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">META</span> <span class="attr">NAME</span>=<span class="string">&quot;Author&quot;</span> <span class="attr">CONTENT</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">META</span> <span class="attr">NAME</span>=<span class="string">&quot;Keywords&quot;</span> <span class="attr">CONTENT</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">META</span> <span class="attr">NAME</span>=<span class="string">&quot;Description&quot;</span> <span class="attr">CONTENT</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">  <span class="selector-tag">html</span>, <span class="selector-tag">body</span> &#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">height</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">padding</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">margin</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">background</span>: <span class="number">#000</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"><span class="selector-tag">canvas</span> &#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">width</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">height</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css">  </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">HEAD</span>&gt;</span></span><br><span class="line"></span><br><span class="line"> <span class="tag">&lt;<span class="name">BODY</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">canvas</span> <span class="attr">id</span>=<span class="string">&quot;pinkboard&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">canvas</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="comment">/*</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript"> * Settings</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript"> */</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> settings = &#123;</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">particles</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">length</span>:   <span class="number">500</span>, <span class="comment">// maximum amount of particles</span></span></span><br><span class="line"><span class="language-javascript">    <span class="attr">duration</span>:   <span class="number">2</span>, <span class="comment">// particle duration in sec</span></span></span><br><span class="line"><span class="language-javascript">    <span class="attr">velocity</span>: <span class="number">100</span>, <span class="comment">// particle velocity in pixels/sec</span></span></span><br><span class="line"><span class="language-javascript">    <span class="attr">effect</span>: -<span class="number">0.75</span>, <span class="comment">// play with this for a nice effect</span></span></span><br><span class="line"><span class="language-javascript">    <span class="attr">size</span>:      <span class="number">30</span>, <span class="comment">// particle size in pixels</span></span></span><br><span class="line"><span class="language-javascript">  &#125;,</span></span><br><span class="line"><span class="language-javascript">&#125;;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="comment">/*</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript"> * RequestAnimationFrame polyfill by Erik Möller</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript"> */</span></span></span><br><span class="line"><span class="language-javascript">(<span class="keyword">function</span>(<span class="params"></span>)&#123;<span class="keyword">var</span> b=<span class="number">0</span>;<span class="keyword">var</span> c=[<span class="string">&quot;ms&quot;</span>,<span class="string">&quot;moz&quot;</span>,<span class="string">&quot;webkit&quot;</span>,<span class="string">&quot;o&quot;</span>];<span class="keyword">for</span>(<span class="keyword">var</span> a=<span class="number">0</span>;a&lt;c.<span class="property">length</span>&amp;&amp;!<span class="variable language_">window</span>.<span class="property">requestAnimationFrame</span>;++a)&#123;<span class="variable language_">window</span>.<span class="property">requestAnimationFrame</span>=<span class="variable language_">window</span>[c[a]+<span class="string">&quot;RequestAnimationFrame&quot;</span>];<span class="variable language_">window</span>.<span class="property">cancelAnimationFrame</span>=<span class="variable language_">window</span>[c[a]+<span class="string">&quot;CancelAnimationFrame&quot;</span>]||<span class="variable language_">window</span>[c[a]+<span class="string">&quot;CancelRequestAnimationFrame&quot;</span>]&#125;<span class="keyword">if</span>(!<span class="variable language_">window</span>.<span class="property">requestAnimationFrame</span>)&#123;<span class="variable language_">window</span>.<span class="property">requestAnimationFrame</span>=<span class="keyword">function</span>(<span class="params">h,e</span>)&#123;<span class="keyword">var</span> d=<span class="keyword">new</span> <span class="title class_">Date</span>().<span class="title function_">getTime</span>();<span class="keyword">var</span> f=<span class="title class_">Math</span>.<span class="title function_">max</span>(<span class="number">0</span>,<span class="number">16</span>-(d-b));<span class="keyword">var</span> g=<span class="variable language_">window</span>.<span class="built_in">setTimeout</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;<span class="title function_">h</span>(d+f)&#125;,f);b=d+f;<span class="keyword">return</span> g&#125;&#125;<span class="keyword">if</span>(!<span class="variable language_">window</span>.<span class="property">cancelAnimationFrame</span>)&#123;<span class="variable language_">window</span>.<span class="property">cancelAnimationFrame</span>=<span class="keyword">function</span>(<span class="params">d</span>)&#123;<span class="built_in">clearTimeout</span>(d)&#125;&#125;&#125;());</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="comment">/*</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript"> * Point class</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript"> */</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> <span class="title class_">Point</span> = (<span class="keyword">function</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">function</span> <span class="title function_">Point</span>(<span class="params">x, y</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">this</span>.<span class="property">x</span> = (<span class="keyword">typeof</span> x !== <span class="string">&#x27;undefined&#x27;</span>) ? x : <span class="number">0</span>;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">this</span>.<span class="property">y</span> = (<span class="keyword">typeof</span> y !== <span class="string">&#x27;undefined&#x27;</span>) ? y : <span class="number">0</span>;</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">  <span class="title class_">Point</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">clone</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Point</span>(<span class="variable language_">this</span>.<span class="property">x</span>, <span class="variable language_">this</span>.<span class="property">y</span>);</span></span><br><span class="line"><span class="language-javascript">  &#125;;</span></span><br><span class="line"><span class="language-javascript">  <span class="title class_">Point</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">length</span> = <span class="keyword">function</span>(<span class="params">length</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">if</span> (<span class="keyword">typeof</span> length == <span class="string">&#x27;undefined&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">return</span> <span class="title class_">Math</span>.<span class="title function_">sqrt</span>(<span class="variable language_">this</span>.<span class="property">x</span> * <span class="variable language_">this</span>.<span class="property">x</span> + <span class="variable language_">this</span>.<span class="property">y</span> * <span class="variable language_">this</span>.<span class="property">y</span>);</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">this</span>.<span class="title function_">normalize</span>();</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">this</span>.<span class="property">x</span> *= length;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">this</span>.<span class="property">y</span> *= length;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">return</span> <span class="variable language_">this</span>;</span></span><br><span class="line"><span class="language-javascript">  &#125;;</span></span><br><span class="line"><span class="language-javascript">  <span class="title class_">Point</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">normalize</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> length = <span class="variable language_">this</span>.<span class="title function_">length</span>();</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">this</span>.<span class="property">x</span> /= length;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">this</span>.<span class="property">y</span> /= length;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">return</span> <span class="variable language_">this</span>;</span></span><br><span class="line"><span class="language-javascript">  &#125;;</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">return</span> <span class="title class_">Point</span>;</span></span><br><span class="line"><span class="language-javascript">&#125;)();</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="comment">/*</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript"> * Particle class</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript"> */</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> <span class="title class_">Particle</span> = (<span class="keyword">function</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">function</span> <span class="title function_">Particle</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">this</span>.<span class="property">position</span> = <span class="keyword">new</span> <span class="title class_">Point</span>();</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">this</span>.<span class="property">velocity</span> = <span class="keyword">new</span> <span class="title class_">Point</span>();</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">this</span>.<span class="property">acceleration</span> = <span class="keyword">new</span> <span class="title class_">Point</span>();</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">this</span>.<span class="property">age</span> = <span class="number">0</span>;</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">  <span class="title class_">Particle</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">initialize</span> = <span class="keyword">function</span>(<span class="params">x, y, dx, dy</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">this</span>.<span class="property">position</span>.<span class="property">x</span> = x;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">this</span>.<span class="property">position</span>.<span class="property">y</span> = y;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">this</span>.<span class="property">velocity</span>.<span class="property">x</span> = dx;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">this</span>.<span class="property">velocity</span>.<span class="property">y</span> = dy;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">this</span>.<span class="property">acceleration</span>.<span class="property">x</span> = dx * settings.<span class="property">particles</span>.<span class="property">effect</span>;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">this</span>.<span class="property">acceleration</span>.<span class="property">y</span> = dy * settings.<span class="property">particles</span>.<span class="property">effect</span>;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">this</span>.<span class="property">age</span> = <span class="number">0</span>;</span></span><br><span class="line"><span class="language-javascript">  &#125;;</span></span><br><span class="line"><span class="language-javascript">  <span class="title class_">Particle</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">update</span> = <span class="keyword">function</span>(<span class="params">deltaTime</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">this</span>.<span class="property">position</span>.<span class="property">x</span> += <span class="variable language_">this</span>.<span class="property">velocity</span>.<span class="property">x</span> * deltaTime;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">this</span>.<span class="property">position</span>.<span class="property">y</span> += <span class="variable language_">this</span>.<span class="property">velocity</span>.<span class="property">y</span> * deltaTime;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">this</span>.<span class="property">velocity</span>.<span class="property">x</span> += <span class="variable language_">this</span>.<span class="property">acceleration</span>.<span class="property">x</span> * deltaTime;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">this</span>.<span class="property">velocity</span>.<span class="property">y</span> += <span class="variable language_">this</span>.<span class="property">acceleration</span>.<span class="property">y</span> * deltaTime;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">this</span>.<span class="property">age</span> += deltaTime;</span></span><br><span class="line"><span class="language-javascript">  &#125;;</span></span><br><span class="line"><span class="language-javascript">  <span class="title class_">Particle</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">draw</span> = <span class="keyword">function</span>(<span class="params">context, image</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">ease</span>(<span class="params">t</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">return</span> (--t) * t * t + <span class="number">1</span>;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> size = image.<span class="property">width</span> * <span class="title function_">ease</span>(<span class="variable language_">this</span>.<span class="property">age</span> / settings.<span class="property">particles</span>.<span class="property">duration</span>);</span></span><br><span class="line"><span class="language-javascript">    context.<span class="property">globalAlpha</span> = <span class="number">1</span> - <span class="variable language_">this</span>.<span class="property">age</span> / settings.<span class="property">particles</span>.<span class="property">duration</span>;</span></span><br><span class="line"><span class="language-javascript">    context.<span class="title function_">drawImage</span>(image, <span class="variable language_">this</span>.<span class="property">position</span>.<span class="property">x</span> - size / <span class="number">2</span>, <span class="variable language_">this</span>.<span class="property">position</span>.<span class="property">y</span> - size / <span class="number">2</span>, size, size);</span></span><br><span class="line"><span class="language-javascript">  &#125;;</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">return</span> <span class="title class_">Particle</span>;</span></span><br><span class="line"><span class="language-javascript">&#125;)();</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="comment">/*</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript"> * ParticlePool class</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript"> */</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> <span class="title class_">ParticlePool</span> = (<span class="keyword">function</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">var</span> particles,</span></span><br><span class="line"><span class="language-javascript">      firstActive = <span class="number">0</span>,</span></span><br><span class="line"><span class="language-javascript">      firstFree   = <span class="number">0</span>,</span></span><br><span class="line"><span class="language-javascript">      duration    = settings.<span class="property">particles</span>.<span class="property">duration</span>;</span></span><br><span class="line"><span class="language-javascript">  </span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">function</span> <span class="title function_">ParticlePool</span>(<span class="params">length</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// create and populate particle pool</span></span></span><br><span class="line"><span class="language-javascript">    particles = <span class="keyword">new</span> <span class="title class_">Array</span>(length);</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; particles.<span class="property">length</span>; i++)</span></span><br><span class="line"><span class="language-javascript">      particles[i] = <span class="keyword">new</span> <span class="title class_">Particle</span>();</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">  <span class="title class_">ParticlePool</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">add</span> = <span class="keyword">function</span>(<span class="params">x, y, dx, dy</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    particles[firstFree].<span class="title function_">initialize</span>(x, y, dx, dy);</span></span><br><span class="line"><span class="language-javascript">    </span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// handle circular queue</span></span></span><br><span class="line"><span class="language-javascript">    firstFree++;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">if</span> (firstFree   == particles.<span class="property">length</span>) firstFree   = <span class="number">0</span>;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">if</span> (firstActive == firstFree       ) firstActive++;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">if</span> (firstActive == particles.<span class="property">length</span>) firstActive = <span class="number">0</span>;</span></span><br><span class="line"><span class="language-javascript">  &#125;;</span></span><br><span class="line"><span class="language-javascript">  <span class="title class_">ParticlePool</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">update</span> = <span class="keyword">function</span>(<span class="params">deltaTime</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> i;</span></span><br><span class="line"><span class="language-javascript">    </span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// update active particles</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">if</span> (firstActive &lt; firstFree) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">for</span> (i = firstActive; i &lt; firstFree; i++)</span></span><br><span class="line"><span class="language-javascript">        particles[i].<span class="title function_">update</span>(deltaTime);</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">if</span> (firstFree &lt; firstActive) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">for</span> (i = firstActive; i &lt; particles.<span class="property">length</span>; i++)</span></span><br><span class="line"><span class="language-javascript">        particles[i].<span class="title function_">update</span>(deltaTime);</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; firstFree; i++)</span></span><br><span class="line"><span class="language-javascript">        particles[i].<span class="title function_">update</span>(deltaTime);</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    </span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// remove inactive particles</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">while</span> (particles[firstActive].<span class="property">age</span> &gt;= duration &amp;&amp; firstActive != firstFree) &#123;</span></span><br><span class="line"><span class="language-javascript">      firstActive++;</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">if</span> (firstActive == particles.<span class="property">length</span>) firstActive = <span class="number">0</span>;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    </span></span><br><span class="line"><span class="language-javascript">    </span></span><br><span class="line"><span class="language-javascript">  &#125;;</span></span><br><span class="line"><span class="language-javascript">  <span class="title class_">ParticlePool</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">draw</span> = <span class="keyword">function</span>(<span class="params">context, image</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// draw active particles</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">if</span> (firstActive &lt; firstFree) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">for</span> (i = firstActive; i &lt; firstFree; i++)</span></span><br><span class="line"><span class="language-javascript">        particles[i].<span class="title function_">draw</span>(context, image);</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">if</span> (firstFree &lt; firstActive) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">for</span> (i = firstActive; i &lt; particles.<span class="property">length</span>; i++)</span></span><br><span class="line"><span class="language-javascript">        particles[i].<span class="title function_">draw</span>(context, image);</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; firstFree; i++)</span></span><br><span class="line"><span class="language-javascript">        particles[i].<span class="title function_">draw</span>(context, image);</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">  &#125;;</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">return</span> <span class="title class_">ParticlePool</span>;</span></span><br><span class="line"><span class="language-javascript">&#125;)();</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="comment">/*</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript"> * Putting it all together</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript"> */</span></span></span><br><span class="line"><span class="language-javascript">(<span class="keyword">function</span>(<span class="params">canvas</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">var</span> context = canvas.<span class="title function_">getContext</span>(<span class="string">&#x27;2d&#x27;</span>),</span></span><br><span class="line"><span class="language-javascript">      particles = <span class="keyword">new</span> <span class="title class_">ParticlePool</span>(settings.<span class="property">particles</span>.<span class="property">length</span>),</span></span><br><span class="line"><span class="language-javascript">      particleRate = settings.<span class="property">particles</span>.<span class="property">length</span> / settings.<span class="property">particles</span>.<span class="property">duration</span>, <span class="comment">// particles/sec</span></span></span><br><span class="line"><span class="language-javascript">      time;</span></span><br><span class="line"><span class="language-javascript">  </span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// get point on heart with -PI &lt;= t &lt;= PI</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">function</span> <span class="title function_">pointOnHeart</span>(<span class="params">t</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Point</span>(</span></span><br><span class="line"><span class="language-javascript">      <span class="number">160</span> * <span class="title class_">Math</span>.<span class="title function_">pow</span>(<span class="title class_">Math</span>.<span class="title function_">sin</span>(t), <span class="number">3</span>),</span></span><br><span class="line"><span class="language-javascript">      <span class="number">130</span> * <span class="title class_">Math</span>.<span class="title function_">cos</span>(t) - <span class="number">50</span> * <span class="title class_">Math</span>.<span class="title function_">cos</span>(<span class="number">2</span> * t) - <span class="number">20</span> * <span class="title class_">Math</span>.<span class="title function_">cos</span>(<span class="number">3</span> * t) - <span class="number">10</span> * <span class="title class_">Math</span>.<span class="title function_">cos</span>(<span class="number">4</span> * t) + <span class="number">25</span></span></span><br><span class="line"><span class="language-javascript">    );</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">  </span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// creating the particle image using a dummy canvas</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">var</span> image = (<span class="keyword">function</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> canvas  = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;canvas&#x27;</span>),</span></span><br><span class="line"><span class="language-javascript">        context = canvas.<span class="title function_">getContext</span>(<span class="string">&#x27;2d&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">    canvas.<span class="property">width</span>  = settings.<span class="property">particles</span>.<span class="property">size</span>;</span></span><br><span class="line"><span class="language-javascript">    canvas.<span class="property">height</span> = settings.<span class="property">particles</span>.<span class="property">size</span>;</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// helper function to create the path</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">to</span>(<span class="params">t</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">var</span> point = <span class="title function_">pointOnHeart</span>(t);</span></span><br><span class="line"><span class="language-javascript">      point.<span class="property">x</span> = settings.<span class="property">particles</span>.<span class="property">size</span> / <span class="number">2</span> + point.<span class="property">x</span> * settings.<span class="property">particles</span>.<span class="property">size</span> / <span class="number">350</span>;</span></span><br><span class="line"><span class="language-javascript">      point.<span class="property">y</span> = settings.<span class="property">particles</span>.<span class="property">size</span> / <span class="number">2</span> - point.<span class="property">y</span> * settings.<span class="property">particles</span>.<span class="property">size</span> / <span class="number">350</span>;</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">return</span> point;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// create the path</span></span></span><br><span class="line"><span class="language-javascript">    context.<span class="title function_">beginPath</span>();</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> t = -<span class="title class_">Math</span>.<span class="property">PI</span>;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> point = <span class="title function_">to</span>(t);</span></span><br><span class="line"><span class="language-javascript">    context.<span class="title function_">moveTo</span>(point.<span class="property">x</span>, point.<span class="property">y</span>);</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">while</span> (t &lt; <span class="title class_">Math</span>.<span class="property">PI</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      t += <span class="number">0.01</span>; <span class="comment">// baby steps!</span></span></span><br><span class="line"><span class="language-javascript">      point = <span class="title function_">to</span>(t);</span></span><br><span class="line"><span class="language-javascript">      context.<span class="title function_">lineTo</span>(point.<span class="property">x</span>, point.<span class="property">y</span>);</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    context.<span class="title function_">closePath</span>();</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// create the fill</span></span></span><br><span class="line"><span class="language-javascript">    context.<span class="property">fillStyle</span> = <span class="string">&#x27;#ea80b0&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">    context.<span class="title function_">fill</span>();</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// create the image</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> image = <span class="keyword">new</span> <span class="title class_">Image</span>();</span></span><br><span class="line"><span class="language-javascript">    image.<span class="property">src</span> = canvas.<span class="title function_">toDataURL</span>();</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">return</span> image;</span></span><br><span class="line"><span class="language-javascript">  &#125;)();</span></span><br><span class="line"><span class="language-javascript">  </span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// render that thing!</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">function</span> <span class="title function_">render</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// next animation frame</span></span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">requestAnimationFrame</span>(render);</span></span><br><span class="line"><span class="language-javascript">    </span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// update time</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> newTime   = <span class="keyword">new</span> <span class="title class_">Date</span>().<span class="title function_">getTime</span>() / <span class="number">1000</span>,</span></span><br><span class="line"><span class="language-javascript">        deltaTime = newTime - (time || newTime);</span></span><br><span class="line"><span class="language-javascript">    time = newTime;</span></span><br><span class="line"><span class="language-javascript">    </span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// clear canvas</span></span></span><br><span class="line"><span class="language-javascript">    context.<span class="title function_">clearRect</span>(<span class="number">0</span>, <span class="number">0</span>, canvas.<span class="property">width</span>, canvas.<span class="property">height</span>);</span></span><br><span class="line"><span class="language-javascript">    </span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// create new particles</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> amount = particleRate * deltaTime;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; amount; i++) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">var</span> pos = <span class="title function_">pointOnHeart</span>(<span class="title class_">Math</span>.<span class="property">PI</span> - <span class="number">2</span> * <span class="title class_">Math</span>.<span class="property">PI</span> * <span class="title class_">Math</span>.<span class="title function_">random</span>());</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">var</span> dir = pos.<span class="title function_">clone</span>().<span class="title function_">length</span>(settings.<span class="property">particles</span>.<span class="property">velocity</span>);</span></span><br><span class="line"><span class="language-javascript">      particles.<span class="title function_">add</span>(canvas.<span class="property">width</span> / <span class="number">2</span> + pos.<span class="property">x</span>, canvas.<span class="property">height</span> / <span class="number">2</span> - pos.<span class="property">y</span>, dir.<span class="property">x</span>, -dir.<span class="property">y</span>);</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    </span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// update and draw particles</span></span></span><br><span class="line"><span class="language-javascript">    particles.<span class="title function_">update</span>(deltaTime);</span></span><br><span class="line"><span class="language-javascript">    particles.<span class="title function_">draw</span>(context, image);</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">  </span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// handle (re-)sizing of the canvas</span></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">function</span> <span class="title function_">onResize</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    canvas.<span class="property">width</span>  = canvas.<span class="property">clientWidth</span>;</span></span><br><span class="line"><span class="language-javascript">    canvas.<span class="property">height</span> = canvas.<span class="property">clientHeight</span>;</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">  <span class="variable language_">window</span>.<span class="property">onresize</span> = onResize;</span></span><br><span class="line"><span class="language-javascript">  </span></span><br><span class="line"><span class="language-javascript">  <span class="comment">// delay rendering bootstrap</span></span></span><br><span class="line"><span class="language-javascript">  <span class="built_in">setTimeout</span>(<span class="keyword">function</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">onResize</span>();</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">render</span>();</span></span><br><span class="line"><span class="language-javascript">  &#125;, <span class="number">10</span>);</span></span><br><span class="line"><span class="language-javascript">&#125;)(<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;pinkboard&#x27;</span>));</span></span><br><span class="line"><span class="language-javascript">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">BODY</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">HTML</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="python的（跳动）"><a href="#python的（跳动）" class="headerlink" title="python的（跳动）"></a>python的（跳动）</h1><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">from</span> math <span class="keyword">import</span> sin, cos, pi, log</span><br><span class="line"><span class="keyword">from</span> tkinter <span class="keyword">import</span> *</span><br><span class="line"> </span><br><span class="line">CANVAS_WIDTH = <span class="number">640</span>  <span class="comment"># 画布的宽</span></span><br><span class="line">CANVAS_HEIGHT = <span class="number">640</span>  <span class="comment"># 画布的高</span></span><br><span class="line">CANVAS_CENTER_X = CANVAS_WIDTH / <span class="number">2</span>  <span class="comment"># 画布中心的X轴坐标</span></span><br><span class="line">CANVAS_CENTER_Y = CANVAS_HEIGHT / <span class="number">2</span>  <span class="comment"># 画布中心的Y轴坐标</span></span><br><span class="line">IMAGE_ENLARGE = <span class="number">11</span>  <span class="comment"># 放大比例</span></span><br><span class="line">HEART_COLOR = <span class="string">&quot;#e77c8e&quot;</span>  <span class="comment"># 心的颜色#ff7171</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">heart_function</span>(<span class="params">t, shrink_ratio: <span class="built_in">float</span> = IMAGE_ENLARGE</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    “爱心函数生成器”</span></span><br><span class="line"><span class="string">    :param shrink_ratio: 放大比例</span></span><br><span class="line"><span class="string">    :param t: 参数</span></span><br><span class="line"><span class="string">    :return: 坐标</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="comment"># 基础函数</span></span><br><span class="line">    x = <span class="number">16</span> * (sin(t) ** <span class="number">3</span>)</span><br><span class="line">    y = -(<span class="number">13</span> * cos(t) - <span class="number">5</span> * cos(<span class="number">2</span> * t) - <span class="number">2</span> * cos(<span class="number">3</span> * t) - cos(<span class="number">4</span> * t))</span><br><span class="line"> </span><br><span class="line">    <span class="comment"># 放大</span></span><br><span class="line">    x *= shrink_ratio</span><br><span class="line">    y *= shrink_ratio</span><br><span class="line"> </span><br><span class="line">    <span class="comment"># 移到画布中央</span></span><br><span class="line">    x += CANVAS_CENTER_X</span><br><span class="line">    y += CANVAS_CENTER_Y</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">int</span>(x), <span class="built_in">int</span>(y)</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">scatter_inside</span>(<span class="params">x, y, beta=<span class="number">0.15</span></span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    随机内部扩散</span></span><br><span class="line"><span class="string">    :param x: 原x</span></span><br><span class="line"><span class="string">    :param y: 原y</span></span><br><span class="line"><span class="string">    :param beta: 强度</span></span><br><span class="line"><span class="string">    :return: 新坐标</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    ratio_x = - beta * log(random.random())</span><br><span class="line">    ratio_y = - beta * log(random.random())</span><br><span class="line"> </span><br><span class="line">    dx = ratio_x * (x - CANVAS_CENTER_X)</span><br><span class="line">    dy = ratio_y * (y - CANVAS_CENTER_Y)</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">return</span> x - dx, y - dy</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">shrink</span>(<span class="params">x, y, ratio</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    抖动</span></span><br><span class="line"><span class="string">    :param x: 原x</span></span><br><span class="line"><span class="string">    :param y: 原y</span></span><br><span class="line"><span class="string">    :param ratio: 比例</span></span><br><span class="line"><span class="string">    :return: 新坐标</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    force = -<span class="number">1</span> / (((x - CANVAS_CENTER_X) ** <span class="number">2</span> + (y - CANVAS_CENTER_Y) ** <span class="number">2</span>) ** <span class="number">0.6</span>)  <span class="comment"># 这个参数...</span></span><br><span class="line">    dx = ratio * force * (x - CANVAS_CENTER_X)</span><br><span class="line">    dy = ratio * force * (y - CANVAS_CENTER_Y)</span><br><span class="line">    <span class="keyword">return</span> x - dx, y - dy</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">curve</span>(<span class="params">p</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    自定义曲线函数，调整跳动周期</span></span><br><span class="line"><span class="string">    :param p: 参数</span></span><br><span class="line"><span class="string">    :return: 正弦</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="comment"># 可以尝试换其他的动态函数，达到更有力量的效果（贝塞尔？）</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">2</span> * (<span class="number">3</span> * sin(<span class="number">4</span> * p)) / (<span class="number">2</span> * pi)</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Heart</span>:</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    爱心类</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line"> </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, generate_frame=<span class="number">20</span></span>):</span><br><span class="line">        self._points = <span class="built_in">set</span>()  <span class="comment"># 原始爱心坐标集合</span></span><br><span class="line">        self._edge_diffusion_points = <span class="built_in">set</span>()  <span class="comment"># 边缘扩散效果点坐标集合</span></span><br><span class="line">        self._center_diffusion_points = <span class="built_in">set</span>()  <span class="comment"># 中心扩散效果点坐标集合</span></span><br><span class="line">        self.all_points = &#123;&#125;  <span class="comment"># 每帧动态点坐标</span></span><br><span class="line">        self.build(<span class="number">2000</span>)</span><br><span class="line"> </span><br><span class="line">        self.random_halo = <span class="number">1000</span></span><br><span class="line"> </span><br><span class="line">        self.generate_frame = generate_frame</span><br><span class="line">        <span class="keyword">for</span> frame <span class="keyword">in</span> <span class="built_in">range</span>(generate_frame):</span><br><span class="line">            self.calc(frame)</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">build</span>(<span class="params">self, number</span>):</span><br><span class="line">        <span class="comment"># 爱心</span></span><br><span class="line">        <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(number):</span><br><span class="line">            t = random.uniform(<span class="number">0</span>, <span class="number">2</span> * pi)  <span class="comment"># 随机不到的地方造成爱心有缺口</span></span><br><span class="line">            x, y = heart_function(t)</span><br><span class="line">            self._points.add((x, y))</span><br><span class="line"> </span><br><span class="line">        <span class="comment"># 爱心内扩散</span></span><br><span class="line">        <span class="keyword">for</span> _x, _y <span class="keyword">in</span> <span class="built_in">list</span>(self._points):</span><br><span class="line">            <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">3</span>):</span><br><span class="line">                x, y = scatter_inside(_x, _y, <span class="number">0.05</span>)</span><br><span class="line">                self._edge_diffusion_points.add((x, y))</span><br><span class="line"> </span><br><span class="line">        <span class="comment"># 爱心内再次扩散</span></span><br><span class="line">        point_list = <span class="built_in">list</span>(self._points)</span><br><span class="line">        <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">4000</span>):</span><br><span class="line">            x, y = random.choice(point_list)</span><br><span class="line">            x, y = scatter_inside(x, y, <span class="number">0.17</span>)</span><br><span class="line">            self._center_diffusion_points.add((x, y))</span><br><span class="line"> </span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">calc_position</span>(<span class="params">x, y, ratio</span>):</span><br><span class="line">        <span class="comment"># 调整缩放比例</span></span><br><span class="line">        force = <span class="number">1</span> / (((x - CANVAS_CENTER_X) ** <span class="number">2</span> + (y - CANVAS_CENTER_Y) ** <span class="number">2</span>) ** <span class="number">0.520</span>)  <span class="comment"># 魔法参数</span></span><br><span class="line"> </span><br><span class="line">        dx = ratio * force * (x - CANVAS_CENTER_X) + random.randint(-<span class="number">1</span>, <span class="number">1</span>)</span><br><span class="line">        dy = ratio * force * (y - CANVAS_CENTER_Y) + random.randint(-<span class="number">1</span>, <span class="number">1</span>)</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">return</span> x - dx, y - dy</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">calc</span>(<span class="params">self, generate_frame</span>):</span><br><span class="line">        ratio = <span class="number">10</span> * curve(generate_frame / <span class="number">10</span> * pi)  <span class="comment"># 圆滑的周期的缩放比例</span></span><br><span class="line"> </span><br><span class="line">        halo_radius = <span class="built_in">int</span>(<span class="number">4</span> + <span class="number">6</span> * (<span class="number">1</span> + curve(generate_frame / <span class="number">10</span> * pi)))</span><br><span class="line">        halo_number = <span class="built_in">int</span>(<span class="number">3000</span> + <span class="number">4000</span> * <span class="built_in">abs</span>(curve(generate_frame / <span class="number">10</span> * pi) ** <span class="number">2</span>))</span><br><span class="line"> </span><br><span class="line">        all_points = []</span><br><span class="line"> </span><br><span class="line">        <span class="comment"># 光环</span></span><br><span class="line">        heart_halo_point = <span class="built_in">set</span>()  <span class="comment"># 光环的点坐标集合</span></span><br><span class="line">        <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(halo_number):</span><br><span class="line">            t = random.uniform(<span class="number">0</span>, <span class="number">2</span> * pi)  <span class="comment"># 随机不到的地方造成爱心有缺口</span></span><br><span class="line">            x, y = heart_function(t, shrink_ratio=<span class="number">11.6</span>)  <span class="comment"># 魔法参数</span></span><br><span class="line">            x, y = shrink(x, y, halo_radius)</span><br><span class="line">            <span class="keyword">if</span> (x, y) <span class="keyword">not</span> <span class="keyword">in</span> heart_halo_point:</span><br><span class="line">                <span class="comment"># 处理新的点</span></span><br><span class="line">                heart_halo_point.add((x, y))</span><br><span class="line">                x += random.randint(-<span class="number">14</span>, <span class="number">14</span>)</span><br><span class="line">                y += random.randint(-<span class="number">14</span>, <span class="number">14</span>)</span><br><span class="line">                size = random.choice((<span class="number">1</span>, <span class="number">2</span>, <span class="number">2</span>))</span><br><span class="line">                all_points.append((x, y, size))</span><br><span class="line"> </span><br><span class="line">        <span class="comment"># 轮廓</span></span><br><span class="line">        <span class="keyword">for</span> x, y <span class="keyword">in</span> self._points:</span><br><span class="line">            x, y = self.calc_position(x, y, ratio)</span><br><span class="line">            size = random.randint(<span class="number">1</span>, <span class="number">3</span>)</span><br><span class="line">            all_points.append((x, y, size))</span><br><span class="line"> </span><br><span class="line">        <span class="comment"># 内容</span></span><br><span class="line">        <span class="keyword">for</span> x, y <span class="keyword">in</span> self._edge_diffusion_points:</span><br><span class="line">            x, y = self.calc_position(x, y, ratio)</span><br><span class="line">            size = random.randint(<span class="number">1</span>, <span class="number">2</span>)</span><br><span class="line">            all_points.append((x, y, size))</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">for</span> x, y <span class="keyword">in</span> self._center_diffusion_points:</span><br><span class="line">            x, y = self.calc_position(x, y, ratio)</span><br><span class="line">            size = random.randint(<span class="number">1</span>, <span class="number">2</span>)</span><br><span class="line">            all_points.append((x, y, size))</span><br><span class="line"> </span><br><span class="line">        self.all_points[generate_frame] = all_points</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">render</span>(<span class="params">self, render_canvas, render_frame</span>):</span><br><span class="line">        <span class="keyword">for</span> x, y, size <span class="keyword">in</span> self.all_points[render_frame % self.generate_frame]:</span><br><span class="line">            render_canvas.create_rectangle(x, y, x + size, y + size, width=<span class="number">0</span>, fill=HEART_COLOR)</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">draw</span>(<span class="params">main: Tk, render_canvas: Canvas, render_heart: Heart, render_frame=<span class="number">0</span></span>):</span><br><span class="line">    render_canvas.delete(<span class="string">&#x27;all&#x27;</span>)</span><br><span class="line">    render_heart.render(render_canvas, render_frame)</span><br><span class="line">    main.after(<span class="number">160</span>, draw, main, render_canvas, render_heart, render_frame + <span class="number">1</span>)</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    root = Tk()  <span class="comment"># 一个Tk</span></span><br><span class="line">    root.title(<span class="string">&#x27;宝贝爱你哟&#x27;</span>)<span class="comment">#将标题设置为&#x27;tkinter&#x27;</span></span><br><span class="line">    canvas = Canvas(root, bg=<span class="string">&#x27;black&#x27;</span>, height=CANVAS_HEIGHT, width=CANVAS_WIDTH)</span><br><span class="line">    canvas.pack()</span><br><span class="line">    heart = Heart()  <span class="comment"># 心</span></span><br><span class="line">    draw(root, canvas, heart)  <span class="comment"># 开始画</span></span><br><span class="line">    root.mainloop()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 代码分享 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>windows下的包管理器scoop</title>
      <link href="/2022/11/11/windows%E4%B8%8B%E7%9A%84%E5%8C%85%E7%AE%A1%E7%90%86%E5%99%A8scoop/"/>
      <url>/2022/11/11/windows%E4%B8%8B%E7%9A%84%E5%8C%85%E7%AE%A1%E7%90%86%E5%99%A8scoop/</url>
      
        <content type="html"><![CDATA[<h3 id="1-Scoop包管理器"><a href="#1-Scoop包管理器" class="headerlink" title="1 Scoop包管理器"></a>1 Scoop包管理器</h3><p>scoop是windows下的一个强大的包管理器可以方便快速的安装软件</p><h4 id="2-scoop安装"><a href="#2-scoop安装" class="headerlink" title="2 scoop安装"></a>2 scoop安装</h4><p>安装scoop很简单只需要在powershell中输入一条指令</p><p><code>iwr -useb get.scoop.sh | iex</code>即可自动安装</p><p>但是默认是在C盘安装所以在运行之前先要更改地址</p><p>并且要让powershell可以执行脚本需要输入</p><p><code>Set-ExecutionPolicy -ExecutionPolicy RemoteSigned -Scope CurrentUser</code></p><p>回车即可</p><p>之后依次输入下面的<strong>两条指令</strong>‘D:\ScoopApp\Scoop’单引号内部的地址可以更改为自己的地址其他的不要动</p><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="variable">$env:SCOOP</span>=<span class="string">&#x27;D:\ScoopApp\Scoop&#x27;</span></span><br><span class="line">[<span class="type">Environment</span>]::SetEnvironmentVariable(<span class="string">&#x27;SCOOP&#x27;</span>, <span class="variable">$env:SCOOP</span>, <span class="string">&#x27;User&#x27;</span>)</span><br></pre></td></tr></table></figure><p>第一条指令没有问题第二条指令也一样单引号内的地址可以更改可能需要管理员身份右键wt以管理身份运行即可（报错也没有关系可以忽略）</p><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="variable">$env:SCOOP_GLOBAL</span>=<span class="string">&#x27;D:\ScoopApp\GlobalScoopApps&#x27;</span> [<span class="type">Environment</span>]::SetEnvironmentVariable(<span class="string">&#x27;SCOOP_GLOBAL&#x27;</span>, <span class="variable">$env:SCOOP_GLOBAL</span>,<span class="string">&#x27;Machine&#x27;</span>)</span><br></pre></td></tr></table></figure><p>输入上两条指令之后再输入<code>iwr -useb get.scoop.sh | iex</code>即可开始安装scoop了</p><p>安装完成之后在’D:\ScoopApp\Scoop’（这里是刚刚自己选择的地方）的地方会有一个scoop的文件夹里面会有</p><ul><li>apps——所有通过scoop安装的软件都在里面。</li><li>buckets——管理软件的仓库，用于记录哪些软件可以安装、更新等信息，默认添加<code>main</code>仓库，主要包含无需GUI的软件，可手动添加其他仓库或自建仓库，具体在<a href="https://zhuanlan.zhihu.com/write#%E6%8E%A8%E8%8D%90%E8%BD%AF%E4%BB%B6%E4%BB%93%E5%BA%93">推荐软件仓库</a>中介绍。</li><li>cache——软件下载后安装包暂存目录。</li><li>persit——用于储存一些用户数据，不会随软件更新而替换。</li><li>shims——用于软链接应用，使应用之间不会互相干扰，实际使用过程中无用户操作不必细究。</li></ul><p>scoop有很多功能可以自行上网查看，这里只用几个最基本的需要用到的</p><ul><li>install——安装软件。</li><li>uninstall——卸载软件。</li><li>update——更新软件。可通过<code>scoop update *</code>更新所有已安装软件，或通过<code>scoop update</code>更新所有软件仓库资料及Scoop自身而不更新软件。</li></ul><p>比如需要安装git只需要在powershell中输入命令<code>scoop install git</code>即可</p><p>scoop + 命令 + 软件名称</p><p> 卸载的话就用<code>scoop uninstall git</code></p><p>还有一个search命令用来查找比如我想安装一个top可以先用<code>scoop search top</code>来查看那些包含top</p><p>比如找到了btop就可以用<code>scoop install btop</code>来安装了</p><img src="/2022/11/11/windows%E4%B8%8B%E7%9A%84%E5%8C%85%E7%AE%A1%E7%90%86%E5%99%A8scoop/scoop-1.png" class="">]]></content>
      
      
      <categories>
          
          <category> 编程入门 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> windows终端插件分享 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>windows下的top工具--btop</title>
      <link href="/2022/11/11/windows%E4%B8%8B%E6%AF%94linux%E7%9A%84htop%E6%9B%B4%E5%A5%BD%E7%94%A8%E7%9A%84top%E5%B7%A5%E5%85%B7btop/"/>
      <url>/2022/11/11/windows%E4%B8%8B%E6%AF%94linux%E7%9A%84htop%E6%9B%B4%E5%A5%BD%E7%94%A8%E7%9A%84top%E5%B7%A5%E5%85%B7btop/</url>
      
        <content type="html"><![CDATA[<p>一款炫酷的性能测试监控分析工具——btop</p><p>linux的top命令，作为我们性能分析的入门命令，一般都是大家首先使用的。但是，top命令的结果，只有和白色，颜色很单一，linux下有htop</p><p>windows下怎么达到同样的效果呢，可以通过scoop安装btop</p><p>btop，可以通过不同颜色、显示处理器、内存、磁盘、网络和进程的使用情况和统计信息的资源监视器。C++<a href="https://github.com/aristocratos/bashtop">bashtop</a>和<a href="https://github.com/aristocratos/bpytop">bpytop</a>的版本和延续。</p><p>在windows下直接用scoop安装即可<code>scoop install btop</code></p><img src="/2022/11/11/windows%E4%B8%8B%E6%AF%94linux%E7%9A%84htop%E6%9B%B4%E5%A5%BD%E7%94%A8%E7%9A%84top%E5%B7%A5%E5%85%B7btop/btop-1.png" class=""><table><thead><tr><th>m</th><th>打开选项参数</th></tr></thead><tbody><tr><td>o</td><td>进入窗口颜色、数据刷新频率等相关配置</td></tr><tr><td>h</td><td>打开帮助</td></tr><tr><td>ctrl + z</td><td>停止进程</td></tr><tr><td>ctrl + c、q</td><td>退出</td></tr><tr><td>-</td><td>减少页面数据刷新间隔，默认2s秒</td></tr><tr><td>+</td><td>增加页面数据刷新间隔</td></tr><tr><td>f，&#x2F;</td><td>开启进程搜索模式，输入搜索关键词，可以搜索进程</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 编程入门 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> windows终端插件分享 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>win11快捷键大全</title>
      <link href="/2022/11/02/win11%E5%85%A8%E9%83%A8%E5%BF%AB%E6%8D%B7%E9%94%AE/"/>
      <url>/2022/11/02/win11%E5%85%A8%E9%83%A8%E5%BF%AB%E6%8D%B7%E9%94%AE/</url>
      
        <content type="html"><![CDATA[<p>Win11快捷键大全</p><p>　　1、Win+A 打开快速设置面板</p><p>　　2、Win+B 快速跳转系统托盘</p><p>　　3、Win+C 打开 Microsoft Teams</p><p>　　4、Win+D 快速显示桌面</p><p>　　5、Win+E 打开资源管理器</p><p>　　6、Win+F 一键提交反馈</p><p>　　7、Win+G 启动 Xbox Game Bar</p><p>　　8、Win+H 语音听写</p><p>　　9、Win+I 打开设置</p><p>　　10、Win+K 投屏到其他设备</p><p>　　11、Win+L 锁屏</p><p>　　12、Win+M 窗口最小化</p><p>　　13、Win+N 打开通知面板&#x2F;月历面板</p><p>　　14、Win+P 修改投影模式</p><p>　　15、Win+Q&#x2F;Win+S 一键搜索</p><p>　　16、Win+R 运行</p><p>　　17、Win+T 查看已打开程序缩略图</p><p>　　18、Win+V 打开云剪贴板</p><p>　　19、Win+W 呼出资讯与兴趣栏</p><p>　　20、Win+X 呼出简易开始菜单</p><p>　　21、Win+Z 打开窗口布局</p><p>　　22、Win + 空格 切换输入法</p><p>　　23、Win + 光标键 窗口排版</p><p>　　24、Win+TAB 虚拟桌面切换</p><p>　　25、Win+Ctrl+D 新建虚拟桌面</p><p>　　26、Win+Prtscn 一键截屏</p><p>　　27、Win+Shift+S 专业屏幕</p><p>　　28、Win+Home 最小化非活动窗口 </p>]]></content>
      
      
      <categories>
          
          <category> 编程入门 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> win11快捷键大全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>lldb快速基础使用</title>
      <link href="/2022/11/02/lldb%E5%BF%AB%E9%80%9F%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8/"/>
      <url>/2022/11/02/lldb%E5%BF%AB%E9%80%9F%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="利用lldb调试"><a href="#利用lldb调试" class="headerlink" title="利用lldb调试"></a>利用lldb调试</h1><p>Low Level Debugger</p><p>指的是轻量级调试器不是低级</p><p>clang++ 和clang 编译</p><p><code>clang++ filename.cpp -o neme</code></p><p>clang（如果是c++就用clang++） + 文件名称 + -o（重命名） 名字</p><p>如果直接用clang++ + 文件名</p><p>默认输出的为a.exe</p><p>和gcc，g++类似</p><p>相对于gdb来说lldb是下一代更好用</p><p>提示会比gdb好很多</p><p>lldb主要用于调试c，cpp和objective-c</p><h1 id="下载安装"><a href="#下载安装" class="headerlink" title="下载安装"></a>下载安装</h1><p>windows中用的<code>llvm-mingw</code>在github中下载解压之后将bin目录添加到系统环境变量中，包含g++和gcc默认用clang</p><h1 id="调试使用"><a href="#调试使用" class="headerlink" title="调试使用"></a>调试使用</h1><h2 id="1-运行断点"><a href="#1-运行断点" class="headerlink" title="1. 运行断点"></a>1. 运行断点</h2><p>编译用<code>clang++ test.cpp</code>编译程序</p><p>如果是C语言就把clang++换成clang</p><p>用gcc的也可以<code>g++ test.cpp</code></p><p>调试时需要使用-g参数<code>clang++ -g test.cpp</code></p><p>gcc的也可以用lldb调试<code>g++ -g test.cpp</code></p><p>仓库中的快捷键<F5>一键编译相当于<code>g++ test.cpp</code></p><p><F4>一键调试编译相当于<code>g++ -g test.cpp</code></p><p>也可以自行更改</p><p>！！！</p><p>！！！</p><p>！！！调试的时候要先-g编译才可以</p><p>调试的时候一定要用-g参数<code>clang++ -g test.cpp</code>或者<F4>一键调试编译</p><p>之后调试的时候才能打断点</p><p>之后运行 <code>lldb .\a.exe</code></p><h3 id="1-1-运行"><a href="#1-1-运行" class="headerlink" title="1.1 运行"></a>1.1 运行</h3><p>用<code>（(lldb) run</code>或者<code>(lldb) r</code>运行</p><h3 id="1-2-断点"><a href="#1-2-断点" class="headerlink" title="1.2 断点"></a>1.2 断点</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">(lldb) breakpoint set -f test.cpp -l #行数</span><br><span class="line">    -f 后更源文件位置 -l 之后是断点行数</span><br><span class="line">(lldb) br s - f test.cpp -l #</span><br><span class="line">    缩写形式</span><br><span class="line">(lldb) b test.cpp : #</span><br><span class="line">    简写</span><br><span class="line">    </span><br><span class="line">(lldb) b [函数名]</span><br></pre></td></tr></table></figure><h3 id="1-3-删除断点"><a href="#1-3-删除断点" class="headerlink" title="1.3 删除断点"></a>1.3 删除断点</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">(lldb) br list</span><br><span class="line">    列出所有断点</span><br><span class="line">(lldb) br del #序号</span><br><span class="line">    删除#的断点</span><br><span class="line">(lldb) br del</span><br><span class="line">    删除所有断点</span><br></pre></td></tr></table></figure><h2 id="2-分步调试"><a href="#2-分步调试" class="headerlink" title="2. 分步调试"></a>2. 分步调试</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">下一步（下一行，一行一行执行）</span><br><span class="line">(lldb) <span class="built_in">next</span></span><br><span class="line">(lldb) n</span><br><span class="line">    </span><br><span class="line">进入（运行到某一行n会直接下一行，用s进入函数）</span><br><span class="line">（用s进入函数系统提供的如prinf不会进入，如果不是函数入口s和n功能一样）</span><br><span class="line">(lldb) <span class="built_in">step</span></span><br><span class="line">(lldb) s</span><br><span class="line">    </span><br><span class="line">继续（运行之后停在第一个断点的时候用c直接到下一个断点）</span><br><span class="line">(lldb) <span class="built_in">continue</span></span><br><span class="line">(lldb) c</span><br></pre></td></tr></table></figure><h2 id="3-查看变量"><a href="#3-查看变量" class="headerlink" title="3. 查看变量"></a>3. 查看变量</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">打印变量值</span><br><span class="line">(lldb) <span class="function">print <span class="title">varname</span></span></span><br><span class="line"><span class="function"><span class="params">(lldb)</span> p varname</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">    如</span></span><br><span class="line"><span class="function">    <span class="params">(lldb)</span> p a</span></span><br><span class="line"><span class="function">    输出$0 </span>= <span class="number">10</span></span><br><span class="line">    可以用 expr $<span class="number">0</span> = <span class="number">20</span></span><br><span class="line">    改变数值</span><br><span class="line">    如</span><br><span class="line">    $<span class="number">0</span> = <span class="number">10</span></span><br><span class="line">    (lldb) expr $<span class="number">0</span> = <span class="number">20</span></span><br><span class="line">    会输出 $<span class="number">1</span> = <span class="number">20</span></span><br><span class="line">    </span><br><span class="line">    (lldb) po varname</span><br><span class="line">    只查看对象的值(只显示数值)</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">列出当前栈帧变量</span><br><span class="line">(lldb) frame <span class="built_in">variable</span></span><br><span class="line">(lldb) fr v</span><br><span class="line">    </span><br><span class="line">切换栈帧（用bt查看序号#）</span><br><span class="line">(lldb) fr select #</span><br><span class="line">(lldb) fr s #</span><br><span class="line">    </span><br><span class="line">调用栈</span><br><span class="line">（调用的会在最上面）</span><br><span class="line">（当前所在栈会有*号）</span><br><span class="line">(lldb) bt</span><br></pre></td></tr></table></figure><h2 id="4-监视断点"><a href="#4-监视断点" class="headerlink" title="4. 监视断点"></a>4. 监视断点</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">全局变量</span><br><span class="line">(lldb) watchpoint set variable [some globalVariable]</span><br><span class="line">(lldb) watchpoint set variable -w read | read_write [some globalVariable]</span><br><span class="line"> </span><br><span class="line">局部变量</span><br><span class="line">(lldb) <span class="function">b <span class="title">main</span></span></span><br><span class="line"><span class="function"><span class="params">(lldb)</span> w s v d.memberVar</span></span><br><span class="line"><span class="function">    </span></span><br><span class="line"><span class="function">在变量改变的时候会触发</span></span><br><span class="line"><span class="function">显示old value和 <span class="keyword">new</span> value</span></span><br></pre></td></tr></table></figure><p>用<code>(lldb) w s v 关键值</code>进行监视，当关键值变化时会自动暂停并输出old value 和new value</p><h2 id="5-终止调试"><a href="#5-终止调试" class="headerlink" title="5. 终止调试"></a>5. 终止调试</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">(lldb) kill</span><br><span class="line">停止调试</span><br><span class="line">    </span><br><span class="line">(lldb) quit</span><br><span class="line">退出lldb</span><br><span class="line">或者exit或Ctrl+c（两次）</span><br></pre></td></tr></table></figure><p>只列举了常用简单的一小部分</p><p>还有很多高级操作查看官网说明</p>]]></content>
      
      
      <categories>
          
          <category> 编程入门 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> neovim </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>powershell 去除版本信息</title>
      <link href="/2022/10/26/powershell-%E5%8E%BB%E9%99%A4%E7%89%88%E6%9C%AC%E4%BF%A1%E6%81%AF/"/>
      <url>/2022/10/26/powershell-%E5%8E%BB%E9%99%A4%E7%89%88%E6%9C%AC%E4%BF%A1%E6%81%AF/</url>
      
        <content type="html"><![CDATA[<h1 id="去除powershell的版本信息"><a href="#去除powershell的版本信息" class="headerlink" title="去除powershell的版本信息"></a>去除powershell的版本信息</h1><p>正常打开powershell的话会显示版本信息以及版权</p><img src="/2022/10/26/powershell-%E5%8E%BB%E9%99%A4%E7%89%88%E6%9C%AC%E4%BF%A1%E6%81%AF/pwsh-1.png" class=""><p>要想去除的话只要在windows terminal的设置中</p><img src="/2022/10/26/powershell-%E5%8E%BB%E9%99%A4%E7%89%88%E6%9C%AC%E4%BF%A1%E6%81%AF/pwsh-2.png" class=""><p>点击powershell的配置，打开右侧的命令行在后面加入<code>空格-nologo</code>即可</p><img src="/2022/10/26/powershell-%E5%8E%BB%E9%99%A4%E7%89%88%E6%9C%AC%E4%BF%A1%E6%81%AF/pwsh-3.png" class=""><p>记得保存重新打开即可</p><img src="/2022/10/26/powershell-%E5%8E%BB%E9%99%A4%E7%89%88%E6%9C%AC%E4%BF%A1%E6%81%AF/pwsh-4.png" class=""><p>再次打开就没有了</p><p><strong>注意：</strong>用oh-my-posh的话会有一些慢并且在vim里面打开的话还是默认有版本信息的，不建议去掉</p><p>去掉的话美化效果会出问题，对功能没有影响</p><img src="/2022/10/26/powershell-%E5%8E%BB%E9%99%A4%E7%89%88%E6%9C%AC%E4%BF%A1%E6%81%AF/pwsh-5.png" class=""><p>会出现奇奇怪怪的样子不过只要clear一下就可以了，</p><p>不去掉的话不会出现这个问题</p><img src="/2022/10/26/powershell-%E5%8E%BB%E9%99%A4%E7%89%88%E6%9C%AC%E4%BF%A1%E6%81%AF/pwsh-6.png" class="">]]></content>
      
      
      <categories>
          
          <category> 编程入门 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> powershell </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>插件分享</title>
      <link href="/2022/10/25/%E6%8F%92%E4%BB%B6%E5%88%86%E4%BA%AB/"/>
      <url>/2022/10/25/%E6%8F%92%E4%BB%B6%E5%88%86%E4%BA%AB/</url>
      
        <content type="html"><![CDATA[<h1 id="vimium-c全键盘操作浏览器插件"><a href="#vimium-c全键盘操作浏览器插件" class="headerlink" title="vimium c全键盘操作浏览器插件"></a>vimium c全键盘操作浏览器插件</h1><p>原来用firefox的时候一直用的一个插件用来全键盘操作</p><p>类似的插件还有很多比如surfingkeys也可以，个人用firefox+vimium c比较多</p><p>前两天突然发现edge上也有这个插件，安装完基本就可以实现全键盘操作了</p><img src="/2022/10/25/%E6%8F%92%E4%BB%B6%E5%88%86%E4%BA%AB/chajian-1.png" class=""><p>直接在微软的插件扩展中搜索安装即可</p><p>谷歌和firefox也有，用shift+&#x2F;即可打开详细信息</p><p>shift+&#x2F;打开之后写的使用方法非常详细</p><p>写的非常清楚，就是前期的话需要学习一下，但是用熟练之后可以完全解放鼠标</p><h2 id="edge的新建标签"><a href="#edge的新建标签" class="headerlink" title="edge的新建标签"></a>edge的新建标签</h2><p>使用vimium c的话在edge的自带的新建标签里面是不工作的</p><img src="/2022/10/25/%E6%8F%92%E4%BB%B6%E5%88%86%E4%BA%AB/chajian-2.png" class=""><p>三种解决方法</p><h3 id="1-第一种"><a href="#1-第一种" class="headerlink" title="1.第一种"></a>1.第一种</h3><p>就是随便搜索一个关键字</p><p>切换到其他页面之后就可以正常使用了</p><p>但是比较麻烦每次都要先搜索一下</p><h3 id="2-第二种方法"><a href="#2-第二种方法" class="headerlink" title="2. 第二种方法"></a>2. 第二种方法</h3><p>在设置里面更改开始页</p><img src="/2022/10/25/%E6%8F%92%E4%BB%B6%E5%88%86%E4%BA%AB/chajian-3.png" class=""><p>这里用的是<a href="https://limestart.cn青柠起始页也是比较干净的/">https://limestart.cn青柠起始页也是比较干净的</a></p><p>或者换成自己喜欢的其他美化的插件之类的就可以正常使用了</p><p>但是点击加号新建标签页的时候还是会用默认的标签页</p><h3 id="3-所以第三种方法"><a href="#3-所以第三种方法" class="headerlink" title="3.所以第三种方法"></a>3.所以第三种方法</h3><p>需要下载一个插件</p><img src="/2022/10/25/%E6%8F%92%E4%BB%B6%E5%88%86%E4%BA%AB/chajian-5.png" class=""><img src="/2022/10/25/%E6%8F%92%E4%BB%B6%E5%88%86%E4%BA%AB/chajian-6.png" class=""><p>将插件开启之后设置启动页面就可以了</p><p>再点击新建默认的就是青柠的起始页面了</p>]]></content>
      
      
      <categories>
          
          <category> 编程入门 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 插件分享 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>neovim快速配置教程</title>
      <link href="/2022/10/21/neovim%E5%BF%AB%E9%80%9F%E9%85%8D%E7%BD%AE/"/>
      <url>/2022/10/21/neovim%E5%BF%AB%E9%80%9F%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h1 id="纯windows下的neovim快速配置过程"><a href="#纯windows下的neovim快速配置过程" class="headerlink" title="纯windows下的neovim快速配置过程"></a>纯windows下的neovim快速配置过程</h1><p>由于github的问题可能图片加载不是很好可以直接下方连接下载最新版解压即可</p><p><a href="https://github.com/jiaxinaoliao/neovimBeginCpp/releases">https://github.com/jiaxinaoliao/neovimBeginCpp/releases</a></p><p>解压之后的REDME.md文件（推荐用typora打开或者notepads（alt+p开启markdown预览）也可以）即可查看</p><p>虽然不是开箱即用但是也省略了大部分配置时间</p><p>下载之后进行简单的安装即可使用</p><p>纯windows环境<strong>不需要虚拟机</strong>纯windows环境下</p><p>linux–wsl（ubuntu22.04LTS）（配置文件在.config）也可以，小改动即可</p><p>本文用的在压缩包的nvim文件夹没有用wsl</p><p>macos应该也能兼容（没有试过）</p><h2 id="1-简介"><a href="#1-简介" class="headerlink" title="1. 简介"></a>1. 简介</h2><p>win10或者win11都可以主要用于c\c++的学习使用（学习编程或者小项目）</p><p><strong>主要用于windows下的 学习编程  学习编程  学习编程 c\c++ c\c++ c\c++</strong></p><p>python应该也可以（没有试过）</p><p>可以实现IDE的基本功能（编译、运行、调试、跳转、报错、提示等等）</p><p><strong>系统：</strong>利用的win11的环境<strong>windows11专业版21H2版本</strong></p><p>（22.10.3更新到22H2版本）</p><p><strong>终端：</strong>最新版的<strong>Windows Terminal</strong>＋<strong>powershell</strong></p><ul><li>注意 ：Microsoft powershell和powershell不一样</li></ul><p>PowerShell 7.2 是下一个长期服务 (LTS) 版本，基于 .NET 6.0 构建。</p><p>在windows和macos和linux都可以支持</p><p><strong>美化：</strong> <strong>oh-my-push</strong></p><p>编译用的clangd调试用的lldb</p><p>windows下lldb用的是MinGW64的llvm-mingw</p><p>利用的工具是scoop类比于ubuntu下的apt，apt-get，arch的pacman</p><p><strong>具体机型配置无所谓，不需要太好的性能八代i3的cpu也能带的动，占用资源超级小</strong></p><p><strong>总结：windows + windows terminal + powershell + oh-my-push + neovim + cpp（clang + lldb）</strong></p><p>主要用于C&#x2F;C++其他语言也可以，前端、python、java等也可以，需要小改动</p><h2 id="2-环境安装"><a href="#2-环境安装" class="headerlink" title="2. 环境安装"></a>2. 环境安装</h2><p>win10和win11差不多都可以兼容</p><h3 id="2-1-下载配置文件"><a href="#2-1-下载配置文件" class="headerlink" title="2.1 下载配置文件"></a>2.1 下载配置文件</h3><p>首先下载仓库(<a href="https://github.com/shuangshuangbb/neovimBeginCpp/releases)%E6%89%93%E5%BC%80%E7%BD%91%E5%9D%80">https://github.com/shuangshuangbb/neovimBeginCpp/releases)打开网址</a></p><p>打不开github的话可以考虑用fastgithub进行加速之后，下载就行</p><p>windows直接下载压缩包之后解压放在一边（方便的位置如桌面配置之后可以删除）</p><p>下载最新版的zip</p><img src="/2022/10/21/neovim%E5%BF%AB%E9%80%9F%E9%85%8D%E7%BD%AE/nvim-peizhi-1.png" class=""><p>在主页也可以下载</p><img src="/2022/10/21/neovim%E5%BF%AB%E9%80%9F%E9%85%8D%E7%BD%AE/nvim-peizhi-2.png" class=""><h3 id="2-2-配置终端设置"><a href="#2-2-配置终端设置" class="headerlink" title="2.2 配置终端设置"></a>2.2 配置终端设置</h3><p>微软商店下载最新版本<strong>Windows Terminal</strong>和<strong>Powershell</strong></p><p>打开下载的配置文件夹里面有一个字体的文件夹里面有Inconsolata LGC Bold Nerd Font Complete Mono Windows Compatible.ttf字体双击打开安装即可，或者自行去(<a href="https://www.nerdfonts.com/)%E5%AE%98%E7%BD%91%E4%B8%8B%E8%BD%BDnerd">https://www.nerdfonts.com/)官网下载nerd</a> fonts的自己喜欢的字体</p><p>22.10.3换字体了Code New Roman Bold Nerd Font Complete Windows Compatible.otf也在文件夹里面打开安装就行</p><p>之后打开windows terminal以下简称wt</p><p>打开wt的设置，在设置中打开配置JSON文件如图</p><img src="/2022/10/21/neovim%E5%BF%AB%E9%80%9F%E9%85%8D%E7%BD%AE/nvim-peizhi-3.png" class=""><p>打开配置文件夹打开wt+pwsh配置文件的文件夹里面有一个<strong>windowsterminal 配置.txt</strong>文件将其中的内容复制<strong>替换</strong>原本的JSON配置文件</p><p>之后保存关闭即可，再次打开wt如果改变说明设置成功，标签栏默认隐藏（alt+z可以打开打开标签栏）如果不习惯也可以在设置-&gt;启动-&gt;启动模式中的启动模式改为别的即可</p><p>也可以在wt的设置中打开默认值-&gt;外观</p><img src="/2022/10/21/neovim%E5%BF%AB%E9%80%9F%E9%85%8D%E7%BD%AE/nvim-peizhi-4.png" class=""><p>之后根据自己的喜好设置透明度或者背景等，也可以更改其他nerd fonts字体</p><p>设置完成之后wt就可以投入使用了</p><p>可以用win+r输入wt快速打开和用cmd类似可以理解为高级好看的cmd终端</p><h3 id="2-3-Scoop包管理器"><a href="#2-3-Scoop包管理器" class="headerlink" title="2.3 Scoop包管理器"></a>2.3 Scoop包管理器</h3><p>scoop是windows下的一个强大的包管理器可以方便快速的安装软件</p><h4 id="2-3-1-scoop安装"><a href="#2-3-1-scoop安装" class="headerlink" title="2.3.1 scoop安装"></a>2.3.1 scoop安装</h4><p>安装scoop很简单只需要在powershell中输入一条指令</p><p><code>iwr -useb get.scoop.sh | iex</code>即可自动安装</p><p>但是默认是在C盘安装所以在运行之前先要更改地址</p><p>并且要让powershell可以执行脚本需要输入</p><p><code>Set-ExecutionPolicy -ExecutionPolicy RemoteSigned -Scope CurrentUser</code></p><p>回车即可</p><p>之后依次输入下面的<strong>两条指令</strong>‘D:\ScoopApp\Scoop’单引号内部的地址可以更改其他的不要动</p><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="variable">$env:SCOOP</span>=<span class="string">&#x27;D:\ScoopApp\Scoop&#x27;</span></span><br><span class="line">[<span class="type">Environment</span>]::SetEnvironmentVariable(<span class="string">&#x27;SCOOP&#x27;</span>, <span class="variable">$env:SCOOP</span>, <span class="string">&#x27;User&#x27;</span>)</span><br></pre></td></tr></table></figure><p>第一条指令没有问题第二条指令也一样单引号内的地址可以更改可能需要管理员身份右键wt以管理身份运行即可</p><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="variable">$env:SCOOP_GLOBAL</span>=<span class="string">&#x27;D:\ScoopApp\GlobalScoopApps&#x27;</span> [<span class="type">Environment</span>]::SetEnvironmentVariable(<span class="string">&#x27;SCOOP_GLOBAL&#x27;</span>, <span class="variable">$env:SCOOP_GLOBAL</span>,<span class="string">&#x27;Machine&#x27;</span>)</span><br></pre></td></tr></table></figure><p>输入上两条指令之后再输入<code>iwr -useb get.scoop.sh | iex</code>即可开始安装scoop了</p><p>安装完成之后在’D:\ScoopApp\Scoop’的地方会有一个scoop的文件夹里面会有</p><ul><li>apps——所有通过scoop安装的软件都在里面。</li><li>buckets——管理软件的仓库，用于记录哪些软件可以安装、更新等信息，默认添加<code>main</code>仓库，主要包含无需GUI的软件，可手动添加其他仓库或自建仓库，具体在<a href="https://zhuanlan.zhihu.com/write#%E6%8E%A8%E8%8D%90%E8%BD%AF%E4%BB%B6%E4%BB%93%E5%BA%93">推荐软件仓库</a>中介绍。</li><li>cache——软件下载后安装包暂存目录。</li><li>persit——用于储存一些用户数据，不会随软件更新而替换。</li><li>shims——用于软链接应用，使应用之间不会互相干扰，实际使用过程中无用户操作不必细究。</li></ul><p>scoop有很多功能可以自行上网查看，这里只用几个最基本的需要用到的</p><ul><li>install——安装软件。</li><li>uninstall——卸载软件。</li><li>update——更新软件。可通过<code>scoop update *</code>更新所有已安装软件，或通过<code>scoop update</code>更新所有软件仓库资料及Scoop自身而不更新软件。</li></ul><p>比如需要安装git只需要在powershell中输入命令<code>scoop install git</code>即可</p><p>scoop + 命令 + 软件名称</p><p> 卸载的话就用<code>scoop uninstall git</code></p><h4 id="2-3-2-安装之后"><a href="#2-3-2-安装之后" class="headerlink" title="2.3.2 安装之后"></a>2.3.2 安装之后</h4><p>安装之后用<code>scoop update</code>进行更新</p><p>之后用<code>scoop bucket add 仓库名 </code>添加仓库</p><p>常用的有以下几个</p><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">main</span><br><span class="line">extras</span><br><span class="line">versions</span><br><span class="line">nightlies</span><br><span class="line">nirsoft</span><br><span class="line">php</span><br><span class="line">nerd<span class="literal">-fonts</span></span><br><span class="line">nonportable</span><br><span class="line">java</span><br><span class="line">games</span><br><span class="line">jetbrains</span><br></pre></td></tr></table></figure><p>咱们需要用的默认的main和extras可以根据自己需要添加，如：</p><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">scoop bucket add main</span><br><span class="line"></span><br><span class="line">scoop bucket add extras</span><br><span class="line"></span><br><span class="line">scoop bucket add java</span><br></pre></td></tr></table></figure><p>main是默认的extras里面有大量的常用的软件java的就是提供java的一些工具</p><p>添加仓库之后用<code>scoop update</code>更新</p><p>之后开始安装软件</p><p>这里推荐用一个<code>scoop install aria2</code>用来加速下载的</p><p>如果报错的话用下面的命令关闭aria2</p><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">scoop config aria2<span class="literal">-enabled</span> false</span><br></pre></td></tr></table></figure><p>同理改成true即可开启</p><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">scoop config aria2<span class="literal">-enabled</span> true</span><br></pre></td></tr></table></figure><p>用<code>scoop list</code>可以查看已经安装的程序</p><p>之后记住scoop install 和scoop uninstall就可以了其他的命令功能可以上官网自行查看这里用不到</p><h2 id="3-程序安装"><a href="#3-程序安装" class="headerlink" title="3. 程序安装"></a>3. 程序安装</h2><h3 id="1-zip"><a href="#1-zip" class="headerlink" title="1. zip"></a>1. zip</h3><p>   首先安转一些小工具</p>   <figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">先把neovim安装上</span><br><span class="line">scoop install neovim</span><br><span class="line"></span><br><span class="line">scoop install git</span><br><span class="line">scoop install <span class="number">7</span>zip</span><br><span class="line">scoop install aria2</span><br><span class="line">scoop install sudo</span><br><span class="line">scoop install <span class="built_in">wget</span></span><br><span class="line">scoop install unzip</span><br><span class="line">scoop install gzip</span><br><span class="line">scoop install ripgrep</span><br><span class="line">scoop install stylua</span><br></pre></td></tr></table></figure><h3 id="2-nodejs"><a href="#2-nodejs" class="headerlink" title="2. nodejs"></a>2. nodejs</h3><p>   需要nodejs的环境</p>   <figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">scoop install nodejs</span><br><span class="line">之后用node <span class="literal">--version</span>和npm <span class="literal">--version</span>检查安装版本</span><br><span class="line">输出版本号说明安装成功</span><br></pre></td></tr></table></figure><p>   windows的话可能需要重启一下环境变量才会生效</p><p>   重启之后用npm –version查看输出版本号说明安装成功</p><p>   之后用npm安装一下wsl-open<code>npm install -g wsl-open</code></p><p>   以后wsl的话用的到</p><h3 id="3-fd-find"><a href="#3-fd-find" class="headerlink" title="3. fd-find"></a>3. fd-find</h3><p>   fd-find（<code>npm install -g fd-find</code>）</p><ul><li>需要node.js环境</li><li>可以用<code>scoop install fd</code>之后在neovim里面<code>:checkhealth</code>一下看看</li></ul><p>   windows的话用<code>scoop install fd</code>即可</p><h3 id="4-lazygit"><a href="#4-lazygit" class="headerlink" title="4. lazygit"></a>4. lazygit</h3><p>   git管理器<code>scoop install lazygit</code></p><h3 id="5-安装python"><a href="#5-安装python" class="headerlink" title="5. 安装python"></a>5. 安装python</h3><p>   windows的话直接去官网下载安装程序运行安装程序即可</p><p>   可以参考这个</p><p>   <a href="https://zhuanlan.zhihu.com/p/344887837">全网最详细的Python安装教程（Windows） - 知乎 (zhihu.com)</a></p><p>   主要就是安装python添加环境变量打开powershell之后输入python –version输出版本号书名成功了</p><h3 id="6-python的环境"><a href="#6-python的环境" class="headerlink" title="6. python的环境"></a>6. python的环境</h3><p>   需要在安装完Python之后</p><p>   <code>sudo pip3 install --upgrade pynvim</code></p><h3 id="7-llvm-mingw下载"><a href="#7-llvm-mingw下载" class="headerlink" title="7. llvm-mingw下载"></a>7. llvm-mingw下载</h3><h4 id="7-1-mingw64编译"><a href="#7-1-mingw64编译" class="headerlink" title="7.1 mingw64编译"></a>7.1 mingw64编译</h4><p>   可以到官网直接下载</p><p>   <a href="https://www.mingw-w64.org/downloads/">Downloads - MinGW-w64</a></p><p>也可以不用下载</p><p>这个配置文件夹里面也有直接复制出来之后添加环境变量即可</p><p>怎么添加环境变量后文有说，可以先复制出来一会一起添加，添加完要重启才能生效</p><p>mingw和llvm-mingw在配置里面都有也可以自行下载或者去</p><p><a href="https://github.com/jiaxinaoliao/llvm-mingw">https://github.com/jiaxinaoliao/llvm-mingw</a></p><p>llvm-mingw这个仓库下载，要是放在一个仓库里的话下载太慢了</p><p>所以给分开放了</p><h4 id="7-2-lldb调试"><a href="#7-2-lldb调试" class="headerlink" title="7.2 lldb调试"></a>7.2 lldb调试</h4><p>gcc的话用gdb调试体验不是很好所以这里用lldb进行调试</p><p>配置文件夹内有一份llvm-mingw快速使用.md有一些基本的lldb的使用方法可以参考一下，也可以直接去官网查看文档</p><p>lldb是llvm的windows的话可以借用库一个是gnu的一个是msvc的就是微软的</p><p>这个是gnu的</p><p>配置文件夹中也有可以直接复制出来使用就行<a href="https://github.com/mstorsjo/llvm-mingw/releases">https://github.com/mstorsjo/llvm-mingw/releases</a>)</p><img src="/2022/10/21/neovim%E5%BF%AB%E9%80%9F%E9%85%8D%E7%BD%AE/nvim-peizhi-5.png" class=""><p>ucrt更通用i686是32位x86_64是64位根据自己电脑下载有macos和ubuntu的版本</p><p>这里用的windows直接下载最后</p><img src="/2022/10/21/neovim%E5%BF%AB%E9%80%9F%E9%85%8D%E7%BD%AE/nvim-peizhi-6.png" class=""><p>这个就可以了</p><p>下载之后解压放在D盘或者其他盘里面记住路径</p><p>可以用文件夹里面的跳过这步</p><p>之后添加系统环境变量，直接win+i打开设置然后搜索环境变量</p><img src="/2022/10/21/neovim%E5%BF%AB%E9%80%9F%E9%85%8D%E7%BD%AE/nvim-peizhi-7.png" class=""><p>搜索打开环境变量</p><img src="/2022/10/21/neovim%E5%BF%AB%E9%80%9F%E9%85%8D%E7%BD%AE/nvim-peizhi-8.png" class=""><img src="/2022/10/21/neovim%E5%BF%AB%E9%80%9F%E9%85%8D%E7%BD%AE/nvim-peizhi-9.png" class=""><p>点击path-&gt;编辑</p><img src="/2022/10/21/neovim%E5%BF%AB%E9%80%9F%E9%85%8D%E7%BD%AE/nvim-peizhi-10.png" class=""><p>之后先点新建然后点浏览</p><img src="/2022/10/21/neovim%E5%BF%AB%E9%80%9F%E9%85%8D%E7%BD%AE/nvim-peizhi-11.png" class=""><p>在浏览文件夹中找到llvm-mingw文件夹点击bin目录</p><p>之后一路确定即可</p><p>顺便把mingw的也添加进来但是要在llvm-mingw的上面（顺序一定不能弄错）</p><p>补充：这个是msvc的(可以跳过)</p><p><a href="https://github.com/llvm/llvm-project/releases">Releases · llvm&#x2F;llvm-project (github.com)</a></p><p>llvm的github上有了windows班去github上下载llvm-win32或64位的安装程序</p><p>选择添加环境变量安装即可</p><p>优点：llvm-win用的是vs库文件需要安转vs或者安装vs的库</p><p>llvm-mingw用的是gnu的库可以用<code>clang -v</code>来查看</p><img src="/2022/10/21/neovim%E5%BF%AB%E9%80%9F%E9%85%8D%E7%BD%AE/nvim-peizhi-12.png" class=""><p>msvc就是vs的链接库llvm-win默认用的就是vs的</p><p>gnu就是mingw的库llvm-mingw默认用的就是gnu的</p><p>msvc的好处是，在终端支持中文显示，但是在neovim内会utf-8乱码（个人觉得不影响-在终端使用方便）</p><p>llvm-mingw默认用的gnu的库，utf-8在vim和终端中都是英文不会乱码</p><p>用llvm-wim的msvc不管是.c还是.cpp文件都可以用clang编译</p><p>但是gnu的.cpp必须用clang++编译</p><p><strong>gnu和msvc二选一即可</strong></p><img src="/2022/10/21/neovim%E5%BF%AB%E9%80%9F%E9%85%8D%E7%BD%AE/nvim-peizhi-13.png" class=""><p><strong>window的话建议用gnu</strong></p><p>改用llvm-mingw用Target：gnu的库，在用msvc的在使用lldb调试的时候打断点会报错</p><p>用mingw的的话编译c++需要用clang++</p><p>在nvim文件夹内的lua文件夹下keybindings.lua的最后</p><img src="/2022/10/21/neovim%E5%BF%AB%E9%80%9F%E9%85%8D%E7%BD%AE/nvim-peizhi-14.png" class=""><p>大概四百多行的位置将clang改为clang++即可如果是.c文件用clang即可</p><p>或者使用gcc改成gcc即可</p><p>可以用<code>:400</code>命令或者快捷键<code>400gg</code>快速跳转到四百行就可以看见了</p><p>或者java改成javac等等都可以自行安排</p><p><F5>一键编译之后用快捷键tt（中）或tb（右）或tc（下）打开一个终端窗口（位置不同）</p><p>用编译好的.exe的名称回车即可运行</p><p>powershell的格式是.\a.exe也可以输入文件(.exe)名称如<code>a</code>之后按<TAB>自动补全也可以</p><p>或者用-o改名如<code>g++ hello.cpp -o test.exe</code>即可编译生成hello.exe文件</p><p>之后<code>hello</code>按<TAB>自动补全<code>.\hello.exe</code>回车运行输出结果</p><p>默认<F5><F4>的名称为a.exe</p><h4 id="7-3-结合"><a href="#7-3-结合" class="headerlink" title="7.3 结合"></a>7.3 结合</h4><p>这里使用的是gcc的编译器，clang也可以，看个人选择</p><p>clang的提示会更好mac的话默认用的clang的</p><p>windows的话gcc的兼容性会更好</p><p>但是要注意环境变量的顺序mingw的要在llvm-mingw的上面</p><p>到这里基本所有需要的程序就都已经安装完毕了</p><h4 id="7-4-UTF-8（windows改为utf-8）"><a href="#7-4-UTF-8（windows改为utf-8）" class="headerlink" title="7.4 UTF-8（windows改为utf-8）"></a>7.4 UTF-8（windows改为utf-8）</h4><p>在设置中找到区域设置</p><img src="/2022/10/21/neovim%E5%BF%AB%E9%80%9F%E9%85%8D%E7%BD%AE/nvim-peizhi-7-1.png" class=""><img src="/2022/10/21/neovim%E5%BF%AB%E9%80%9F%E9%85%8D%E7%BD%AE/nvim-peizhi-7-2.png" class=""><p>找到语言管理设置</p><p>!<img src="/2022/10/21/neovim%E5%BF%AB%E9%80%9F%E9%85%8D%E7%BD%AE/nvim-peizhi-7-3.png" class=""></p><p>选择更改系统区域设置</p><img src="/2022/10/21/neovim%E5%BF%AB%E9%80%9F%E9%85%8D%E7%BD%AE/nvim-peizhi-7-4.png" class=""><p>选用utf-8之后确定即可，需要重启电脑</p><h3 id="8-之后加的gokcehan-x2F-lf"><a href="#8-之后加的gokcehan-x2F-lf" class="headerlink" title="8. 之后加的gokcehan&#x2F;lf"></a>8. 之后加的<a href="https://github.com/gokcehan">gokcehan</a>&#x2F;<strong><a href="https://github.com/gokcehan/lf">lf</a></strong></h3><p>   类似于linux下的lf终端下的资源管理器</p><p>   直接到girhub上下载windows的版本<code>lf-windows-adm64</code>直接下载之后解压</p><p>   或者直接用这个配置文件夹中的</p><p>   文件夹中的是64位的windows的如果需要可以自行下载</p><p>   放在c盘以外的地方之后添加到环境变量中（需要重启一下）</p><p>   在终端中用lf即可打开</p><img src="/2022/10/21/neovim%E5%BF%AB%E9%80%9F%E9%85%8D%E7%BD%AE/nvim-peizhi-15.png" class=""><p>和vim操作差不多jk上下移动选择hl左右文件夹e用记事本打开，l打开q退出</p><p>windows的兼容性不是很好只是用来浏览用的</p><h2 id="4-运行neovim"><a href="#4-运行neovim" class="headerlink" title="4. 运行neovim"></a>4. 运行neovim</h2><p>先要安装neovim用<code>scoop install neovim</code>就可以</p><p>将配置文件夹中的nvim文件夹复制粘贴到C盘C:\用户\用户名称\AppData\Local</p><p>整个文件夹复制进来（linux下的可以用.config文件夹）放在Local&#x2F;下面</p><p>之后在wt中打开neovim用nvim回车即可</p><p>第一次打开会自动安装packer插件管理器不用管等待安装完成即可</p><p>如果没有成功查看一下网络打开fastgithub</p><p>安装完成之后在neovim里面用:PackerSync命令进行安装插件</p><p>安装插件也许要可以连接上github用fastgithub或者代理也可以</p><p>全都安装不上就是网络问题</p><p>如果有一两个安装不上重新运行:PackerSync即可</p><p>全部安装好后就可以直接使用了如果有报错可以在neovim中用:CheckHealth检查一下</p><p>却少什么不能用报错error可以warning</p><p>如果报错看看缺少什么安装一下即可</p><h2 id="5-自定义改动"><a href="#5-自定义改动" class="headerlink" title="5. 自定义改动"></a>5. 自定义改动</h2><p>在配置文件中nvim-&gt;lua-&gt;<strong>keybindings.lua</strong>文件包含快捷键以及注释可以自行更改</p><p>上述没有用到oh-my-push如果需要的话可以去微软商店下载安装</p><p>或者百度查找微软商店安装的话需要多安装几次确保安装没有问题</p><p>之后在powershell中用notepad 打开配置文件</p><p><code>notepad $PORFILE</code>打开配置文件</p><p>将配置文件夹中的<strong>Microsoft.PowerShell_profile.ps1</strong>打开全部复制粘贴到里面</p><p>有一个带注释的.ps1的配置文件有具体说明</p><p>使用的时候用不带注释的会快一点</p><p>然后保存关闭在powershell中运行<code>.$PROFILE</code>加载一下即可</p><p>在oh-my-push中<code>Get-PoshThemes</code>可以查看所有主题</p><p>选一款自己喜欢的记住名字<img src="/2022/10/21/neovim%E5%BF%AB%E9%80%9F%E9%85%8D%E7%BD%AE/nvim-peizhi-16.png" class=""></p><p>之后用<code>notepad $PORFILE</code>打开配置文件将圈出来的地方改为自己喜欢的主题的名字即可</p><p>保存关闭后用<code>.$PROFILE</code>重新加载</p><p>可以方向键的右键-&gt;补全历史命令用ctrl+-&gt;部分补全</p><p>文件中如果安装<code>scoop install busybox</code>的话可以将<code>Remove-Item alias:\ls</code>之后的删除</p><p>建议安装busybox提供了很多linux的指令</p><p>在nvim-&gt;lua-&gt;plugin-config-&gt;<strong>dashboard.lua</strong>可以更改自己喜欢的开机界面</p><img src="/2022/10/21/neovim%E5%BF%AB%E9%80%9F%E9%85%8D%E7%BD%AE/nvim-peizhi-17.png" class=""><img src="/2022/10/21/neovim%E5%BF%AB%E9%80%9F%E9%85%8D%E7%BD%AE/nvim-peizhi-18.png" class=""><img src="/2022/10/21/neovim%E5%BF%AB%E9%80%9F%E9%85%8D%E7%BD%AE/nvim-peizhi-19.png" class=""><p>都可以更改，样式会显示最后一个把最后一个删了或更改即可</p><p>至此全部配置完成可以将下载的配置文件夹删除了</p><p>可以实现代码补全，跳转，提示以及编译</p><p>调试的话用的vimspector但是没有配置完全</p><p>这里直接用的lldb去进行调试也是不错的后续有机会会更新</p><p>由于水平有限只能手动安装程序，有实力的选手可以自己写一个安装脚本一键安装</p><p>注：由于github连接问题可能加载不了图片所以所有的截图都放在了单独的文件夹中下载之后就能看了</p><p><a href="https://zhuanlan.zhihu.com/p/68111471">精通 VIM ，此文就够了 - 知乎 (zhihu.com)</a></p><p>可以看看快速了解一下vim以及tmux</p><p>新增主题catppuccin&#x2F;nvim还可以晚上看不错</p><img src="/2022/10/21/neovim%E5%BF%AB%E9%80%9F%E9%85%8D%E7%BD%AE/nvim-peizhi-20.png" class=""><p>想改的话可以在主题设置中将第一行取消注释<code>require(&#39;colorschme&#39;)</code></p><p>将第二行注释掉就可以更改了改为gruvbox</p><img src="/2022/10/21/neovim%E5%BF%AB%E9%80%9F%E9%85%8D%E7%BD%AE/nvim-peizhi-21.png" class=""><p>或者在colorscheme.lua文件中更改自己喜欢的主题</p><p>tokyonight（星星也很高）和catppuccin&#x2F;nvim效果差不多可以去看官方文档</p><img src="/2022/10/21/neovim%E5%BF%AB%E9%80%9F%E9%85%8D%E7%BD%AE/nvim-peizhi-22.png" class=""><h3 id="5-1-starship-terminal-busybox"><a href="#5-1-starship-terminal-busybox" class="headerlink" title="5.1 starship+terminal+busybox"></a>5.1 starship+terminal+busybox</h3><p>由于oh-my-posh启动速度太慢所以改为starship也可以起到美化作用并有参数提示提升速度，当然喜欢oh-my-posh主题的话也可以不换只是启动慢一点，不介意的话没有任何问题，可以去官网参考一下配置</p><p><a href="https://starship.rs/zh-cn/config/">配置 | Starship</a></p><p>可以在windows Terminal中用<code>notepad $PORFILE</code>打开配置文件</p><p><code>#Invoke-Expression (&amp;starship init powershell)</code>将第二行的#去注释把第一行注释掉就行，starship的配置文件放在C:\Users\用户名\ .config文件夹下创建一个名为starship.toml的文件或者直接复制粘贴配置文件夹中的文件</p><p>可以参考官网更更改</p><h2 id="6-快捷键设置"><a href="#6-快捷键设置" class="headerlink" title="6. 快捷键设置"></a>6. 快捷键设置</h2><p>快捷键的话在~nvim\lua下面的keybindings.lua文件中</p><h2 id="7-补充"><a href="#7-补充" class="headerlink" title="7. 补充"></a>7. 补充</h2><h3 id="1-不用go语言的话"><a href="#1-不用go语言的话" class="headerlink" title="1. 不用go语言的话"></a>1. 不用go语言的话</h3><p>添加了go语言的gopls但是安装需要设置一下</p><p>或者不用go语言的话在配置文件夹nvim&#x2F;lua&#x2F;lsp&#x2F;setup.lua将</p><img src="/2022/10/21/neovim%E5%BF%AB%E9%80%9F%E9%85%8D%E7%BD%AE/nvim-peizhi-23.png" class=""><p>最后的gopls用<code>-- gopls</code>注释掉就可以了</p><h3 id="用go语言的话"><a href="#用go语言的话" class="headerlink" title="用go语言的话"></a>用go语言的话</h3><p>需要修改系统环境变量</p><p>新建一个环境变量如下</p><img src="/2022/10/21/neovim%E5%BF%AB%E9%80%9F%E9%85%8D%E7%BD%AE/nvim-peizhi-24.png" class=""><p>之后确定，windows尽量重启一下</p><p>之后就可以自动安装了</p><p>要不然安装gopls的时候会报错</p><h2 id="8-gdb调试"><a href="#8-gdb调试" class="headerlink" title="8. gdb调试"></a>8. gdb调试</h2><p>说明在这儿</p><p><a href="https://github.com/mfussenegger/nvim-dap/wiki/C-C---Rust-(gdb-via--vscode-cpptools)">C C Rust (gdb via vscode cpptools) · mfussenegger&#x2F;nvim-dap Wiki (github.com)</a></p><p>vscode-cpptools的下载在这</p><p><a href="https://github.com/microsoft/vscode-cpptools/releases">Releases · microsoft&#x2F;vscode-cpptools (github.com)</a></p><p>下载vscode-cpptools之后</p><img src="/2022/10/21/neovim%E5%BF%AB%E9%80%9F%E9%85%8D%E7%BD%AE/nvim-peizhi-8-1.png" class=""><p>将command改为自己刚刚下载的路径即可</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">,dt 打断点</span><br><span class="line">,dd 开始调试</span><br><span class="line">,de 停止调试</span><br></pre></td></tr></table></figure><p>windows下默认用的gdb不是很好用（没有配置好）还不如直接用上面的lldb</p>]]></content>
      
      
      <categories>
          
          <category> 编程入门 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> neovim </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>blog中的图片显示问题</title>
      <link href="/2022/10/20/blog%E7%9A%84%E5%9B%BE%E7%89%87%E6%98%BE%E7%A4%BA/"/>
      <url>/2022/10/20/blog%E7%9A%84%E5%9B%BE%E7%89%87%E6%98%BE%E7%A4%BA/</url>
      
        <content type="html"><![CDATA[<h1 id="blog中上传-md文件不能显示图片"><a href="#blog中上传-md文件不能显示图片" class="headerlink" title="blog中上传*.md文件不能显示图片"></a>blog中上传*.md文件不能显示图片</h1><h2 id="1-md的分享问题"><a href="#1-md的分享问题" class="headerlink" title="1. *.md的分享问题"></a>1. *.md的分享问题</h2><p>由于*.md文件不能直接存储图片，很多时候向别人分享*.md文件的时候不能显示图片</p><p>先看看用typora怎么办吧</p><p>先去设置中打开偏好设置选图片设置</p><p>在插入图片时复制到.&#x2F;assets文件夹中，并且勾选使用相对路径</p><img src="/2022/10/20/blog%E7%9A%84%E5%9B%BE%E7%89%87%E6%98%BE%E7%A4%BA/md-img-1.png" class=""><p>在图片复制过来的时候会自动创建一个assets的文件夹里面存放截图</p><p>分享*.md文件的时候可以直接连文件夹一起发给对方就可以了</p><h2 id="2-上传在blog中"><a href="#2-上传在blog中" class="headerlink" title="2. 上传在blog中"></a>2. 上传在blog中</h2><p>但是在上传到blog中的时候这里用的hexo架构会发现还是显示不出来</p><p>我这个主题用的butterfly非常经典的一个主题</p><p>我找了很多方法发现网上大多是抄来抄去，基本都是安装什么插件</p><p>基本没啥用，主要是hexo后来更新了，内部自带了很多插件所以不用我们去改直接用就行</p><p>官网已经给出方法了，主要是网上抄的太多了没几个有用的</p><p>看一下官网给的方法</p><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">&#123;% asset_img example.jpg This is an example image %&#125;</span><br></pre></td></tr></table></figure><p>直接用这个引用就行了</p><p>将图片放在和*.md的同一个文件夹内就可以了</p><p>不过由于blog的文件都在source里面有点乱</p><p>所以这里单独新建一个文件夹用来存放图片，文件夹的名字和*.md的名字相同</p><p><strong>注意：</strong>这里不是自己创建，要去设置一下</p><p>在blog的根目录下找到_config.yml文件大概在四十多行<code>post_asset_folder: true</code>将false改为true</p><p>之后创建新的文章的时候<code>hexo new &quot;test&quot;</code>会自动生成一个和*.md同名的文件夹可以专门用来存放图片</p><p>将图片放入自动生成的文件夹中，或者将typora的assets文件夹改名字都可以</p><p>之后用</p><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">&#123;% asset_img 图片名称带后缀 %&#125;</span><br></pre></td></tr></table></figure><p>即可</p><p>怕打错名字的话可以直接复制名称，毕竟正常截图的名字都奇奇怪怪的</p><p>在typora里面是看不出来但是在网页上是可以显示的</p>]]></content>
      
      
      <categories>
          
          <category> blog教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> blog </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>blog快速搭建教程（基于github和gitpages）</title>
      <link href="/2022/10/19/my-first-blog/"/>
      <url>/2022/10/19/my-first-blog/</url>
      
        <content type="html"><![CDATA[<h2 id="1-博客搭建教程"><a href="#1-博客搭建教程" class="headerlink" title="1. 博客搭建教程"></a>1. 博客搭建教程</h2><p>地址是：<a href="https://jiaxinaoliao.xyz/">贾心奥利奥 (jiaxinaoliao.xyz)</a></p><p>用的<code>github + github pages</code>可以说是完全免费了，就是github的话连接不是很稳定</p><p>不过免费的要啥自行车，而且最近都可以直连还是比较稳定</p><p>缺点就是github.io的后缀在百度上是找不到的，不过不影响访问，问题不大</p><h2 id="2-快速搭建教程"><a href="#2-快速搭建教程" class="headerlink" title="2. 快速搭建教程"></a>2. 快速搭建教程</h2><h3 id="1-工具准备"><a href="#1-工具准备" class="headerlink" title="1. 工具准备"></a>1. 工具准备</h3><p>操作非常简单</p><p>是在windows环境下搭建的,mac的话原理是一样的</p><p>首先要有一个scoop，scoop的安装可以看后面的教程</p><p>mac和linux有自己的包管理器</p><p>首先用scoop安装git和node.js</p><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">scoop install git</span><br><span class="line">scoop install nodejs</span><br><span class="line"></span><br><span class="line">用</span><br><span class="line">npm <span class="literal">-v</span></span><br><span class="line">node <span class="literal">-v</span></span><br><span class="line">检查版本</span><br><span class="line">输出版本说面安装成功</span><br><span class="line"></span><br><span class="line">之后安装hexo</span><br><span class="line">npm install <span class="literal">-g</span> hexo<span class="literal">-cli</span></span><br><span class="line">用</span><br><span class="line">hexo <span class="literal">-v</span></span><br><span class="line">查看版本</span><br></pre></td></tr></table></figure><h3 id="2-github仓库搭建"><a href="#2-github仓库搭建" class="headerlink" title="2. github仓库搭建"></a>2. github仓库搭建</h3><p>github注册的话就不说了去官网<a href="https://github.com/">https://github.com</a>一步一步来注册一个账号即可</p><p>注册账号之后新建一个仓库</p><p>注意仓库的名字（Repository name）要和所有者（Owner）的名字一样比如abc&#x2F;abc.github.io</p><p>abc.github.io后面的github.io是固定的abc要和仓库所有者的名字一样</p><p>最后生成的博客网址就是<a href="https://abc.github.io/">https://abc.github.io/</a></p><img src="/2022/10/19/my-first-blog/my-first-blog-1.png" class=""><p>下面的描述（Description）可写可不写</p><p>可以添加一个.md文件（把下面的Add a README file勾选上即可）</p><p>之后点击绿色按钮创建仓库即可</p><h3 id="3-SSH-key"><a href="#3-SSH-key" class="headerlink" title="3. SSH key"></a>3. SSH key</h3><h4 id="1-连接ssh"><a href="#1-连接ssh" class="headerlink" title="1. 连接ssh"></a>1. 连接ssh</h4><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">在终端中用</span><br><span class="line">ssh<span class="literal">-keygen</span> <span class="literal">-t</span> rsa <span class="literal">-C</span> <span class="string">&quot;电子邮件地址&quot;</span></span><br><span class="line">这里的电子邮件是github注册时的电子邮件地址</span><br><span class="line">如：ssh<span class="literal">-keygen</span> <span class="literal">-t</span> rsa <span class="literal">-C</span> <span class="string">&quot;abc@qq.com&quot;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="2-添加秘钥"><a href="#2-添加秘钥" class="headerlink" title="2. 添加秘钥"></a>2. 添加秘钥</h4><p>在C:\Users\用户名\.ssh文件夹中（记得要显示隐藏文件才能看见.ssh文件夹）里面有一个<code>id_rsa.pub</code>文件用记事本打开全选复制里面的内容之后打开自己的girhub页面</p><img src="/2022/10/19/my-first-blog/my-first-blog-2.png" class=""><p>找到下面的Settings打开</p><img src="/2022/10/19/my-first-blog/my-first-blog-3.png" class=""><p>打开ssh</p><img src="/2022/10/19/my-first-blog/my-first-blog-4.png" class=""><img src="/2022/10/19/my-first-blog/my-first-blog-5.png" class=""><p>title的话可以写比如my blog之类的没有影响</p><p>在key里面粘贴刚才复制的公钥什么都不要改按绿色按钮添加即可</p><h4 id="3-测试是否成功"><a href="#3-测试是否成功" class="headerlink" title="3. 测试是否成功"></a>3. 测试是否成功</h4><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">之后在终端用</span><br><span class="line">ssh <span class="literal">-T</span> git@github.com</span><br><span class="line">测试是否成功</span><br><span class="line"></span><br><span class="line">成功的话会输出</span><br><span class="line">Hi abc! You<span class="string">&#x27;ve successfully authenticated,</span></span><br><span class="line"><span class="string">之后就可以了</span></span><br></pre></td></tr></table></figure><h2 id="3-生成本地内容"><a href="#3-生成本地内容" class="headerlink" title="3. 生成本地内容"></a>3. 生成本地内容</h2><p>新建一个blog文件夹放在哪里都可以用来存放自己的博客的文件</p><p>之后在终端中cd到blog文件夹中</p><p>如果配置过程中有什么问题直接把blog文件夹删了即可之后再新建一个</p><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">在文件夹中先进行初始化</span><br><span class="line">hexo init</span><br><span class="line">出现</span><br><span class="line">INFO <span class="built_in">Start</span> blogging with Hexo!</span><br><span class="line">说明安装成功</span><br><span class="line">安装没有成功的话多半是网络问题多运行几遍命令</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">可以直接用</span><br><span class="line">hexo s</span><br><span class="line">和hexo server一样的效果</span><br><span class="line">可以去http://localhost:<span class="number">4000</span>/查看网页初始化的页面</span><br><span class="line">用ctrl+c停止</span><br></pre></td></tr></table></figure><h2 id="4-发布到互联网"><a href="#4-发布到互联网" class="headerlink" title="4. 发布到互联网"></a>4. 发布到互联网</h2><p>在blog文件夹中应该是</p><img src="/2022/10/19/my-first-blog/my-first-blog-6.png" class=""><p>大概这样其中<code>_config.yml</code>需要我们自己修改一下</p><p>可以用记事本打开将最后面的改为</p><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  <span class="built_in">type</span>: git</span><br><span class="line">  repository: https://github.com/abc/abc.github.io.git</span><br><span class="line">  branch: main</span><br></pre></td></tr></table></figure><p>即可</p><img src="/2022/10/19/my-first-blog/my-first-blog-7.png" class=""><p>在文件的前面位置可以更改title如<code>title: abc</code>以及authot作者等等</p><p>美化的事情后面再说先将博客搭建起来</p><p>更改之后保存关闭之后即可</p><p>之后在终端中运行<code>npm install hexo-deployer-git --save</code>安装一下这个工具</p><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">之后<span class="built_in">cd</span>到blog文件下</span><br><span class="line">hexo generate</span><br><span class="line">和hexo g效果一样</span><br><span class="line">生成页面</span><br><span class="line"></span><br><span class="line">之后用</span><br><span class="line">hexo d进行上传</span><br><span class="line">和hexo deploy一样</span><br></pre></td></tr></table></figure><p>到此基本就完成了你的网址就是<a href="https://abc.github.io/">https://abc.github.io/</a></p><p>直接用浏览器打开就可以看见了</p><h2 id="5-文章的创建"><a href="#5-文章的创建" class="headerlink" title="5. 文章的创建"></a>5. 文章的创建</h2><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">可以直接在blog文件夹中用命令行</span><br><span class="line">hexo new <span class="string">&quot;myblog.md&quot;</span></span><br><span class="line">需要等待几秒</span><br><span class="line">或者直接在blog的文件夹中的source/_posts下面直接创建.md的文件</span><br></pre></td></tr></table></figure><p>编写好.md文件之后用</p><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">hexo s</span><br><span class="line">本地预览</span><br><span class="line"></span><br><span class="line">hexo g</span><br><span class="line">生成页面</span><br><span class="line"></span><br><span class="line">hexo d</span><br><span class="line">推送出去</span><br></pre></td></tr></table></figure><p>在<a href="https://abc.github.io/%E5%B0%B1%E5%8F%AF%E4%BB%A5%E7%9C%8B%E8%A7%81%E4%BA%86">https://abc.github.io/就可以看见了</a></p>]]></content>
      
      
      <categories>
          
          <category> blog教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> blog </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
